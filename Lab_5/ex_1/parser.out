Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    nl
    ws

Grammar

Rule 0     S' -> sessione
Rule 1     sessione -> expr_list QP
Rule 2     expr_list -> expr_list PV expr
Rule 3     expr_list -> expr
Rule 4     expr -> scalar_assign
Rule 5     expr -> vector_assign
Rule 6     expr -> vect_expr_
Rule 7     expr -> scalar_expr_
Rule 8     vect_expr_ -> vect_expr
Rule 9     scalar_expr_ -> scalar_expr
Rule 10    vect_scal_expr -> scalar_expr PROD vect_expr
Rule 11    vect_scal_expr -> scalar_expr DIV vect_expr
Rule 12    vect_expr -> vect_expr PLUS vect_expr
Rule 13    vect_expr -> vect_expr MINUS vect_expr
Rule 14    vect_expr -> vect_scal_expr
Rule 15    vect_expr -> vect_expr PROD scalar_expr
Rule 16    vect_expr -> vect_expr DIV scalar_expr
Rule 17    vect_expr -> LBR vect_expr RBR
Rule 18    vect_expr -> vector
Rule 19    scalar_expr -> scalar_expr PLUS scalar_expr
Rule 20    scalar_expr -> scalar_expr MINUS scalar_expr
Rule 21    scalar_expr -> scalar_expr PROD scalar_expr
Rule 22    scalar_expr -> scalar_expr DIV scalar_expr
Rule 23    scalar_expr -> MINUS scalar_expr
Rule 24    scalar_expr -> scalar_expr EXP scalar_expr
Rule 25    scalar_expr -> LBR scalar_expr RBR
Rule 26    scalar_expr -> vect_expr PT vect_expr
Rule 27    scalar_expr -> scalar
Rule 28    scalar_assign -> SCALAR_VAR EQUALS scalar_expr
Rule 29    vector_assign -> VECTOR_VAR EQUALS vect_expr
Rule 30    scalar -> CONST
Rule 31    scalar -> SCALAR_VAR
Rule 32    vector -> VECTOR_VAR
Rule 33    vector -> LBS scalar_expr CM scalar_expr RBS

Terminals, with rules where they appear

CM                   : 33
CONST                : 30
DIV                  : 11 16 22
EQUALS               : 28 29
EXP                  : 24
LBR                  : 17 25
LBS                  : 33
MINUS                : 13 20 23
PLUS                 : 12 19
PROD                 : 10 15 21
PT                   : 26
PV                   : 2
QP                   : 1
RBR                  : 17 25
RBS                  : 33
SCALAR_VAR           : 28 31
VECTOR_VAR           : 29 32
error                : 
nl                   : 
ws                   : 

Nonterminals, with rules where they appear

expr                 : 2 3
expr_list            : 1 2
scalar               : 27
scalar_assign        : 4
scalar_expr          : 9 10 11 15 16 19 19 20 20 21 21 22 22 23 24 24 25 28 33 33
scalar_expr_         : 7
sessione             : 0
vect_expr            : 8 10 11 12 12 13 13 15 16 17 26 26 29
vect_expr_           : 6
vect_scal_expr       : 14
vector               : 18
vector_assign        : 5

Parsing method: LALR

state 0

    (0) S' -> . sessione
    (1) sessione -> . expr_list QP
    (2) expr_list -> . expr_list PV expr
    (3) expr_list -> . expr
    (4) expr -> . scalar_assign
    (5) expr -> . vector_assign
    (6) expr -> . vect_expr_
    (7) expr -> . scalar_expr_
    (28) scalar_assign -> . SCALAR_VAR EQUALS scalar_expr
    (29) vector_assign -> . VECTOR_VAR EQUALS vect_expr
    (8) vect_expr_ -> . vect_expr
    (9) scalar_expr_ -> . scalar_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    SCALAR_VAR      shift and go to state 8
    VECTOR_VAR      shift and go to state 10
    LBR             shift and go to state 14
    MINUS           shift and go to state 12
    LBS             shift and go to state 17
    CONST           shift and go to state 18

    sessione                       shift and go to state 1
    expr_list                      shift and go to state 2
    expr                           shift and go to state 3
    scalar_assign                  shift and go to state 4
    vector_assign                  shift and go to state 5
    vect_expr_                     shift and go to state 6
    scalar_expr_                   shift and go to state 7
    scalar_expr                    shift and go to state 9
    vect_expr                      shift and go to state 11
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 1

    (0) S' -> sessione .



state 2

    (1) sessione -> expr_list . QP
    (2) expr_list -> expr_list . PV expr

    QP              shift and go to state 19
    PV              shift and go to state 20


state 3

    (3) expr_list -> expr .

    QP              reduce using rule 3 (expr_list -> expr .)
    PV              reduce using rule 3 (expr_list -> expr .)


state 4

    (4) expr -> scalar_assign .

    QP              reduce using rule 4 (expr -> scalar_assign .)
    PV              reduce using rule 4 (expr -> scalar_assign .)


state 5

    (5) expr -> vector_assign .

    QP              reduce using rule 5 (expr -> vector_assign .)
    PV              reduce using rule 5 (expr -> vector_assign .)


state 6

    (6) expr -> vect_expr_ .

    QP              reduce using rule 6 (expr -> vect_expr_ .)
    PV              reduce using rule 6 (expr -> vect_expr_ .)


state 7

    (7) expr -> scalar_expr_ .

    QP              reduce using rule 7 (expr -> scalar_expr_ .)
    PV              reduce using rule 7 (expr -> scalar_expr_ .)


state 8

    (28) scalar_assign -> SCALAR_VAR . EQUALS scalar_expr
    (31) scalar -> SCALAR_VAR .

    EQUALS          shift and go to state 21
    PLUS            reduce using rule 31 (scalar -> SCALAR_VAR .)
    MINUS           reduce using rule 31 (scalar -> SCALAR_VAR .)
    PROD            reduce using rule 31 (scalar -> SCALAR_VAR .)
    DIV             reduce using rule 31 (scalar -> SCALAR_VAR .)
    EXP             reduce using rule 31 (scalar -> SCALAR_VAR .)
    QP              reduce using rule 31 (scalar -> SCALAR_VAR .)
    PV              reduce using rule 31 (scalar -> SCALAR_VAR .)


state 9

    (9) scalar_expr_ -> scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    QP              reduce using rule 9 (scalar_expr_ -> scalar_expr .)
    PV              reduce using rule 9 (scalar_expr_ -> scalar_expr .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26


state 10

    (29) vector_assign -> VECTOR_VAR . EQUALS vect_expr
    (32) vector -> VECTOR_VAR .

    EQUALS          shift and go to state 27
    PLUS            reduce using rule 32 (vector -> VECTOR_VAR .)
    MINUS           reduce using rule 32 (vector -> VECTOR_VAR .)
    PROD            reduce using rule 32 (vector -> VECTOR_VAR .)
    DIV             reduce using rule 32 (vector -> VECTOR_VAR .)
    PT              reduce using rule 32 (vector -> VECTOR_VAR .)
    QP              reduce using rule 32 (vector -> VECTOR_VAR .)
    PV              reduce using rule 32 (vector -> VECTOR_VAR .)


state 11

    (8) vect_expr_ -> vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    QP              reduce using rule 8 (vect_expr_ -> vect_expr .)
    PV              reduce using rule 8 (vect_expr_ -> vect_expr .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    PROD            shift and go to state 30
    DIV             shift and go to state 31
    PT              shift and go to state 32


state 12

    (23) scalar_expr -> MINUS . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 33
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 13

    (14) vect_expr -> vect_scal_expr .

    PLUS            reduce using rule 14 (vect_expr -> vect_scal_expr .)
    MINUS           reduce using rule 14 (vect_expr -> vect_scal_expr .)
    PROD            reduce using rule 14 (vect_expr -> vect_scal_expr .)
    DIV             reduce using rule 14 (vect_expr -> vect_scal_expr .)
    PT              reduce using rule 14 (vect_expr -> vect_scal_expr .)
    QP              reduce using rule 14 (vect_expr -> vect_scal_expr .)
    PV              reduce using rule 14 (vect_expr -> vect_scal_expr .)
    RBR             reduce using rule 14 (vect_expr -> vect_scal_expr .)
    EXP             reduce using rule 14 (vect_expr -> vect_scal_expr .)
    CM              reduce using rule 14 (vect_expr -> vect_scal_expr .)
    RBS             reduce using rule 14 (vect_expr -> vect_scal_expr .)


state 14

    (17) vect_expr -> LBR . vect_expr RBR
    (25) scalar_expr -> LBR . scalar_expr RBR
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    MINUS           shift and go to state 12
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    vect_expr                      shift and go to state 38
    scalar_expr                    shift and go to state 39
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 15

    (18) vect_expr -> vector .

    PLUS            reduce using rule 18 (vect_expr -> vector .)
    MINUS           reduce using rule 18 (vect_expr -> vector .)
    PROD            reduce using rule 18 (vect_expr -> vector .)
    DIV             reduce using rule 18 (vect_expr -> vector .)
    PT              reduce using rule 18 (vect_expr -> vector .)
    QP              reduce using rule 18 (vect_expr -> vector .)
    PV              reduce using rule 18 (vect_expr -> vector .)
    RBR             reduce using rule 18 (vect_expr -> vector .)
    EXP             reduce using rule 18 (vect_expr -> vector .)
    CM              reduce using rule 18 (vect_expr -> vector .)
    RBS             reduce using rule 18 (vect_expr -> vector .)


state 16

    (27) scalar_expr -> scalar .

    PLUS            reduce using rule 27 (scalar_expr -> scalar .)
    MINUS           reduce using rule 27 (scalar_expr -> scalar .)
    PROD            reduce using rule 27 (scalar_expr -> scalar .)
    DIV             reduce using rule 27 (scalar_expr -> scalar .)
    EXP             reduce using rule 27 (scalar_expr -> scalar .)
    QP              reduce using rule 27 (scalar_expr -> scalar .)
    PV              reduce using rule 27 (scalar_expr -> scalar .)
    RBR             reduce using rule 27 (scalar_expr -> scalar .)
    CM              reduce using rule 27 (scalar_expr -> scalar .)
    PT              reduce using rule 27 (scalar_expr -> scalar .)
    RBS             reduce using rule 27 (scalar_expr -> scalar .)


state 17

    (33) vector -> LBS . scalar_expr CM scalar_expr RBS
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 40
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 18

    (30) scalar -> CONST .

    PLUS            reduce using rule 30 (scalar -> CONST .)
    MINUS           reduce using rule 30 (scalar -> CONST .)
    PROD            reduce using rule 30 (scalar -> CONST .)
    DIV             reduce using rule 30 (scalar -> CONST .)
    EXP             reduce using rule 30 (scalar -> CONST .)
    QP              reduce using rule 30 (scalar -> CONST .)
    PV              reduce using rule 30 (scalar -> CONST .)
    RBR             reduce using rule 30 (scalar -> CONST .)
    CM              reduce using rule 30 (scalar -> CONST .)
    PT              reduce using rule 30 (scalar -> CONST .)
    RBS             reduce using rule 30 (scalar -> CONST .)


state 19

    (1) sessione -> expr_list QP .

    $end            reduce using rule 1 (sessione -> expr_list QP .)


state 20

    (2) expr_list -> expr_list PV . expr
    (4) expr -> . scalar_assign
    (5) expr -> . vector_assign
    (6) expr -> . vect_expr_
    (7) expr -> . scalar_expr_
    (28) scalar_assign -> . SCALAR_VAR EQUALS scalar_expr
    (29) vector_assign -> . VECTOR_VAR EQUALS vect_expr
    (8) vect_expr_ -> . vect_expr
    (9) scalar_expr_ -> . scalar_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    SCALAR_VAR      shift and go to state 8
    VECTOR_VAR      shift and go to state 10
    LBR             shift and go to state 14
    MINUS           shift and go to state 12
    LBS             shift and go to state 17
    CONST           shift and go to state 18

    expr                           shift and go to state 41
    scalar_assign                  shift and go to state 4
    vector_assign                  shift and go to state 5
    vect_expr_                     shift and go to state 6
    scalar_expr_                   shift and go to state 7
    scalar_expr                    shift and go to state 9
    vect_expr                      shift and go to state 11
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 21

    (28) scalar_assign -> SCALAR_VAR EQUALS . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 42
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 22

    (19) scalar_expr -> scalar_expr PLUS . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 43
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 23

    (20) scalar_expr -> scalar_expr MINUS . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 44
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 24

    (21) scalar_expr -> scalar_expr PROD . scalar_expr
    (10) vect_scal_expr -> scalar_expr PROD . vect_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 45
    vect_expr                      shift and go to state 46
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 25

    (22) scalar_expr -> scalar_expr DIV . scalar_expr
    (11) vect_scal_expr -> scalar_expr DIV . vect_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 47
    vect_expr                      shift and go to state 48
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 26

    (24) scalar_expr -> scalar_expr EXP . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 49
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 27

    (29) vector_assign -> VECTOR_VAR EQUALS . vect_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    MINUS           shift and go to state 12
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    vect_expr                      shift and go to state 50
    vect_scal_expr                 shift and go to state 13
    scalar_expr                    shift and go to state 51
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 28

    (12) vect_expr -> vect_expr PLUS . vect_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    MINUS           shift and go to state 12
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    vect_expr                      shift and go to state 52
    vect_scal_expr                 shift and go to state 13
    scalar_expr                    shift and go to state 51
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 29

    (13) vect_expr -> vect_expr MINUS . vect_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    MINUS           shift and go to state 12
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    vect_expr                      shift and go to state 53
    vect_scal_expr                 shift and go to state 13
    scalar_expr                    shift and go to state 51
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 30

    (15) vect_expr -> vect_expr PROD . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    vect_expr                      shift and go to state 35
    scalar_expr                    shift and go to state 54
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 31

    (16) vect_expr -> vect_expr DIV . scalar_expr
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    vect_expr                      shift and go to state 35
    scalar_expr                    shift and go to state 55
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 32

    (26) scalar_expr -> vect_expr PT . vect_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    MINUS           shift and go to state 12
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    vect_expr                      shift and go to state 56
    vect_scal_expr                 shift and go to state 13
    scalar_expr                    shift and go to state 51
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 33

    (23) scalar_expr -> MINUS scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    MINUS           reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    PROD            reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    DIV             reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    EXP             reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    QP              reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    PV              reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    RBR             reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    CM              reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    PT              reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)
    RBS             reduce using rule 23 (scalar_expr -> MINUS scalar_expr .)

  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! PROD            [ shift and go to state 24 ]
  ! DIV             [ shift and go to state 25 ]
  ! EXP             [ shift and go to state 26 ]


state 34

    (25) scalar_expr -> LBR . scalar_expr RBR
    (17) vect_expr -> LBR . vect_expr RBR
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 39
    vect_expr                      shift and go to state 57
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 35

    (26) scalar_expr -> vect_expr . PT vect_expr
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr

    PT              shift and go to state 32
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    PROD            shift and go to state 30
    DIV             shift and go to state 31


state 36

    (31) scalar -> SCALAR_VAR .

    PLUS            reduce using rule 31 (scalar -> SCALAR_VAR .)
    MINUS           reduce using rule 31 (scalar -> SCALAR_VAR .)
    PROD            reduce using rule 31 (scalar -> SCALAR_VAR .)
    DIV             reduce using rule 31 (scalar -> SCALAR_VAR .)
    EXP             reduce using rule 31 (scalar -> SCALAR_VAR .)
    QP              reduce using rule 31 (scalar -> SCALAR_VAR .)
    PV              reduce using rule 31 (scalar -> SCALAR_VAR .)
    RBR             reduce using rule 31 (scalar -> SCALAR_VAR .)
    CM              reduce using rule 31 (scalar -> SCALAR_VAR .)
    PT              reduce using rule 31 (scalar -> SCALAR_VAR .)
    RBS             reduce using rule 31 (scalar -> SCALAR_VAR .)


state 37

    (32) vector -> VECTOR_VAR .

    PT              reduce using rule 32 (vector -> VECTOR_VAR .)
    PLUS            reduce using rule 32 (vector -> VECTOR_VAR .)
    MINUS           reduce using rule 32 (vector -> VECTOR_VAR .)
    PROD            reduce using rule 32 (vector -> VECTOR_VAR .)
    DIV             reduce using rule 32 (vector -> VECTOR_VAR .)
    RBR             reduce using rule 32 (vector -> VECTOR_VAR .)
    EXP             reduce using rule 32 (vector -> VECTOR_VAR .)
    QP              reduce using rule 32 (vector -> VECTOR_VAR .)
    PV              reduce using rule 32 (vector -> VECTOR_VAR .)
    CM              reduce using rule 32 (vector -> VECTOR_VAR .)
    RBS             reduce using rule 32 (vector -> VECTOR_VAR .)


state 38

    (17) vect_expr -> LBR vect_expr . RBR
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    RBR             shift and go to state 58
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    PROD            shift and go to state 30
    DIV             shift and go to state 31
    PT              shift and go to state 32


state 39

    (25) scalar_expr -> LBR scalar_expr . RBR
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    RBR             shift and go to state 59
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26


state 40

    (33) vector -> LBS scalar_expr . CM scalar_expr RBS
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    CM              shift and go to state 60
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26


state 41

    (2) expr_list -> expr_list PV expr .

    QP              reduce using rule 2 (expr_list -> expr_list PV expr .)
    PV              reduce using rule 2 (expr_list -> expr_list PV expr .)


state 42

    (28) scalar_assign -> SCALAR_VAR EQUALS scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    QP              reduce using rule 28 (scalar_assign -> SCALAR_VAR EQUALS scalar_expr .)
    PV              reduce using rule 28 (scalar_assign -> SCALAR_VAR EQUALS scalar_expr .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26


state 43

    (19) scalar_expr -> scalar_expr PLUS scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    MINUS           reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    QP              reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    PV              reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    RBR             reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    CM              reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    PT              reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    RBS             reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .)
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26

  ! PROD            [ reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .) ]
  ! DIV             [ reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .) ]
  ! EXP             [ reduce using rule 19 (scalar_expr -> scalar_expr PLUS scalar_expr .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]


state 44

    (20) scalar_expr -> scalar_expr MINUS scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    MINUS           reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    QP              reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    PV              reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    RBR             reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    CM              reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    PT              reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    RBS             reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .)
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26

  ! PROD            [ reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .) ]
  ! DIV             [ reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .) ]
  ! EXP             [ reduce using rule 20 (scalar_expr -> scalar_expr MINUS scalar_expr .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]


state 45

    (21) scalar_expr -> scalar_expr PROD scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    MINUS           reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    PROD            reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    DIV             reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    QP              reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    PV              reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    RBR             reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    CM              reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    PT              reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    RBS             reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .)
    EXP             shift and go to state 26

  ! EXP             [ reduce using rule 21 (scalar_expr -> scalar_expr PROD scalar_expr .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! PROD            [ shift and go to state 24 ]
  ! DIV             [ shift and go to state 25 ]


state 46

    (10) vect_scal_expr -> scalar_expr PROD vect_expr .
    (26) scalar_expr -> vect_expr . PT vect_expr
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr

    PLUS            reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    MINUS           reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    PROD            reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    DIV             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    PT              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    QP              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    PV              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    RBR             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    EXP             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    CM              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    RBS             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)

  ! PT              [ shift and go to state 32 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! PROD            [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]


state 47

    (22) scalar_expr -> scalar_expr DIV scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    MINUS           reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    PROD            reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    DIV             reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    QP              reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    PV              reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    RBR             reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    CM              reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    PT              reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    RBS             reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .)
    EXP             shift and go to state 26

  ! EXP             [ reduce using rule 22 (scalar_expr -> scalar_expr DIV scalar_expr .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! PROD            [ shift and go to state 24 ]
  ! DIV             [ shift and go to state 25 ]


state 48

    (11) vect_scal_expr -> scalar_expr DIV vect_expr .
    (26) scalar_expr -> vect_expr . PT vect_expr
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr

    PLUS            reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    MINUS           reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    PROD            reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    DIV             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    PT              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    QP              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    PV              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    RBR             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    EXP             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    CM              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    RBS             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)

  ! PT              [ shift and go to state 32 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! PROD            [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]


state 49

    (24) scalar_expr -> scalar_expr EXP scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    MINUS           reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    PROD            reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    DIV             reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    EXP             reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    QP              reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    PV              reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    RBR             reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    CM              reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    PT              reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)
    RBS             reduce using rule 24 (scalar_expr -> scalar_expr EXP scalar_expr .)

  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! PROD            [ shift and go to state 24 ]
  ! DIV             [ shift and go to state 25 ]
  ! EXP             [ shift and go to state 26 ]


state 50

    (29) vector_assign -> VECTOR_VAR EQUALS vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    QP              reduce using rule 29 (vector_assign -> VECTOR_VAR EQUALS vect_expr .)
    PV              reduce using rule 29 (vector_assign -> VECTOR_VAR EQUALS vect_expr .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    PROD            shift and go to state 30
    DIV             shift and go to state 31
    PT              shift and go to state 32


state 51

    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr

    PROD            shift and go to state 61
    DIV             shift and go to state 62
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    EXP             shift and go to state 26


state 52

    (12) vect_expr -> vect_expr PLUS vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    PLUS            reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    MINUS           reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    QP              reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    PV              reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    RBR             reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    EXP             reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    CM              reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    RBS             reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .)
    PROD            shift and go to state 30
    DIV             shift and go to state 31
    PT              shift and go to state 32

  ! PROD            [ reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .) ]
  ! DIV             [ reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .) ]
  ! PT              [ reduce using rule 12 (vect_expr -> vect_expr PLUS vect_expr .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]


state 53

    (13) vect_expr -> vect_expr MINUS vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    PLUS            reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    MINUS           reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    QP              reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    PV              reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    RBR             reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    EXP             reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    CM              reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    RBS             reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .)
    PROD            shift and go to state 30
    DIV             shift and go to state 31
    PT              shift and go to state 32

  ! PROD            [ reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .) ]
  ! DIV             [ reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .) ]
  ! PT              [ reduce using rule 13 (vect_expr -> vect_expr MINUS vect_expr .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]


state 54

    (15) vect_expr -> vect_expr PROD scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    MINUS           reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    PROD            reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    DIV             reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    PT              reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    QP              reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    PV              reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    RBR             reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    CM              reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    RBS             reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .)
    EXP             shift and go to state 26

  ! EXP             [ reduce using rule 15 (vect_expr -> vect_expr PROD scalar_expr .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! PROD            [ shift and go to state 24 ]
  ! DIV             [ shift and go to state 25 ]


state 55

    (16) vect_expr -> vect_expr DIV scalar_expr .
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    PLUS            reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    MINUS           reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    PROD            reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    DIV             reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    PT              reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    QP              reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    PV              reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    RBR             reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    CM              reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    RBS             reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .)
    EXP             shift and go to state 26

  ! EXP             [ reduce using rule 16 (vect_expr -> vect_expr DIV scalar_expr .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! PROD            [ shift and go to state 24 ]
  ! DIV             [ shift and go to state 25 ]


state 56

    (26) scalar_expr -> vect_expr PT vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    PLUS            reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    MINUS           reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    PROD            reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    DIV             reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    EXP             reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    QP              reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    PV              reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    RBR             reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    CM              reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    PT              reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)
    RBS             reduce using rule 26 (scalar_expr -> vect_expr PT vect_expr .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! PROD            [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! PT              [ shift and go to state 32 ]


state 57

    (17) vect_expr -> LBR vect_expr . RBR
    (26) scalar_expr -> vect_expr . PT vect_expr
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr

    RBR             shift and go to state 58
    PT              shift and go to state 32
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    PROD            shift and go to state 30
    DIV             shift and go to state 31


state 58

    (17) vect_expr -> LBR vect_expr RBR .

    PLUS            reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    MINUS           reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    PROD            reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    DIV             reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    PT              reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    QP              reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    PV              reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    RBR             reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    EXP             reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    CM              reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)
    RBS             reduce using rule 17 (vect_expr -> LBR vect_expr RBR .)


state 59

    (25) scalar_expr -> LBR scalar_expr RBR .

    PLUS            reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    MINUS           reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    PROD            reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    DIV             reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    EXP             reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    QP              reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    PV              reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    RBR             reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    CM              reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    PT              reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)
    RBS             reduce using rule 25 (scalar_expr -> LBR scalar_expr RBR .)


state 60

    (33) vector -> LBS scalar_expr CM . scalar_expr RBS
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS

    MINUS           shift and go to state 12
    LBR             shift and go to state 34
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17

    scalar_expr                    shift and go to state 63
    vect_expr                      shift and go to state 35
    scalar                         shift and go to state 16
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15

state 61

    (10) vect_scal_expr -> scalar_expr PROD . vect_expr
    (21) scalar_expr -> scalar_expr PROD . scalar_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    MINUS           shift and go to state 12
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    scalar_expr                    shift and go to state 45
    vect_expr                      shift and go to state 64
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 62

    (11) vect_scal_expr -> scalar_expr DIV . vect_expr
    (22) scalar_expr -> scalar_expr DIV . scalar_expr
    (12) vect_expr -> . vect_expr PLUS vect_expr
    (13) vect_expr -> . vect_expr MINUS vect_expr
    (14) vect_expr -> . vect_scal_expr
    (15) vect_expr -> . vect_expr PROD scalar_expr
    (16) vect_expr -> . vect_expr DIV scalar_expr
    (17) vect_expr -> . LBR vect_expr RBR
    (18) vect_expr -> . vector
    (19) scalar_expr -> . scalar_expr PLUS scalar_expr
    (20) scalar_expr -> . scalar_expr MINUS scalar_expr
    (21) scalar_expr -> . scalar_expr PROD scalar_expr
    (22) scalar_expr -> . scalar_expr DIV scalar_expr
    (23) scalar_expr -> . MINUS scalar_expr
    (24) scalar_expr -> . scalar_expr EXP scalar_expr
    (25) scalar_expr -> . LBR scalar_expr RBR
    (26) scalar_expr -> . vect_expr PT vect_expr
    (27) scalar_expr -> . scalar
    (10) vect_scal_expr -> . scalar_expr PROD vect_expr
    (11) vect_scal_expr -> . scalar_expr DIV vect_expr
    (32) vector -> . VECTOR_VAR
    (33) vector -> . LBS scalar_expr CM scalar_expr RBS
    (30) scalar -> . CONST
    (31) scalar -> . SCALAR_VAR

    LBR             shift and go to state 14
    MINUS           shift and go to state 12
    VECTOR_VAR      shift and go to state 37
    LBS             shift and go to state 17
    CONST           shift and go to state 18
    SCALAR_VAR      shift and go to state 36

    scalar_expr                    shift and go to state 47
    vect_expr                      shift and go to state 65
    vect_scal_expr                 shift and go to state 13
    vector                         shift and go to state 15
    scalar                         shift and go to state 16

state 63

    (33) vector -> LBS scalar_expr CM scalar_expr . RBS
    (19) scalar_expr -> scalar_expr . PLUS scalar_expr
    (20) scalar_expr -> scalar_expr . MINUS scalar_expr
    (21) scalar_expr -> scalar_expr . PROD scalar_expr
    (22) scalar_expr -> scalar_expr . DIV scalar_expr
    (24) scalar_expr -> scalar_expr . EXP scalar_expr
    (10) vect_scal_expr -> scalar_expr . PROD vect_expr
    (11) vect_scal_expr -> scalar_expr . DIV vect_expr

    RBS             shift and go to state 66
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    PROD            shift and go to state 24
    DIV             shift and go to state 25
    EXP             shift and go to state 26


state 64

    (10) vect_scal_expr -> scalar_expr PROD vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    PLUS            reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    MINUS           reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    PROD            reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    DIV             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    PT              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    QP              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    PV              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    EXP             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    RBR             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    CM              reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)
    RBS             reduce using rule 10 (vect_scal_expr -> scalar_expr PROD vect_expr .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! PROD            [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! PT              [ shift and go to state 32 ]


state 65

    (11) vect_scal_expr -> scalar_expr DIV vect_expr .
    (12) vect_expr -> vect_expr . PLUS vect_expr
    (13) vect_expr -> vect_expr . MINUS vect_expr
    (15) vect_expr -> vect_expr . PROD scalar_expr
    (16) vect_expr -> vect_expr . DIV scalar_expr
    (26) scalar_expr -> vect_expr . PT vect_expr

    PLUS            reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    MINUS           reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    PROD            reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    DIV             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    PT              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    QP              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    PV              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    EXP             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    RBR             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    CM              reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)
    RBS             reduce using rule 11 (vect_scal_expr -> scalar_expr DIV vect_expr .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! PROD            [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! PT              [ shift and go to state 32 ]


state 66

    (33) vector -> LBS scalar_expr CM scalar_expr RBS .

    PLUS            reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    MINUS           reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    PROD            reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    DIV             reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    PT              reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    QP              reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    PV              reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    RBR             reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    EXP             reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    CM              reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)
    RBS             reduce using rule 33 (vector -> LBS scalar_expr CM scalar_expr RBS .)

