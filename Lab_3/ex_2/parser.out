Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    nl

Grammar

Rule 0     S' -> file
Rule 1     file -> authors_list SEP loans_list
Rule 2     authors_list -> authors_list author_entry
Rule 3     authors_list -> author_entry
Rule 4     author_entry -> NAME ARROW books S
Rule 5     books -> books CM book
Rule 6     books -> book
Rule 7     book -> ISBN CL NAME CL INT CL collocation
Rule 8     book -> ISBN CL NAME CL INT
Rule 9     collocation -> l_g INT LETTER
Rule 10    collocation -> l_g INT
Rule 11    l_g -> LI AV
Rule 12    l_g -> LI SO
Rule 13    l_g -> LS AV
Rule 14    l_g -> LS SO
Rule 15    l_g -> LS BO
Rule 16    loans_list -> loans_list loan_entry
Rule 17    loans_list -> loan_entry
Rule 18    loan_entry -> NAME CL loan_books S
Rule 19    loan_books -> loan_books CM DATE ISBN
Rule 20    loan_books -> DATE ISBN
Rule 21    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 4
AV                   : 11 13
BO                   : 15
CL                   : 7 7 7 8 8 18
CM                   : 5 19
DATE                 : 19 20
INT                  : 7 8 9 10
ISBN                 : 7 8 19 20
LETTER               : 9
LI                   : 11 12
LS                   : 13 14 15
NAME                 : 4 7 8 18
S                    : 4 18
SEP                  : 1
SO                   : 12 14
error                : 
nl                   : 

Nonterminals, with rules where they appear

author_entry         : 2 3
authors_list         : 1 2
book                 : 5 6
books                : 4 5
collocation          : 7
empty                : 
file                 : 0
l_g                  : 9 10
loan_books           : 18 19
loan_entry           : 16 17
loans_list           : 1 16

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . authors_list SEP loans_list
    (2) authors_list -> . authors_list author_entry
    (3) authors_list -> . author_entry
    (4) author_entry -> . NAME ARROW books S

    NAME            shift and go to state 4

    file                           shift and go to state 1
    authors_list                   shift and go to state 2
    author_entry                   shift and go to state 3

state 1

    (0) S' -> file .



state 2

    (1) file -> authors_list . SEP loans_list
    (2) authors_list -> authors_list . author_entry
    (4) author_entry -> . NAME ARROW books S

    SEP             shift and go to state 5
    NAME            shift and go to state 4

    author_entry                   shift and go to state 6

state 3

    (3) authors_list -> author_entry .

    SEP             reduce using rule 3 (authors_list -> author_entry .)
    NAME            reduce using rule 3 (authors_list -> author_entry .)


state 4

    (4) author_entry -> NAME . ARROW books S

    ARROW           shift and go to state 7


state 5

    (1) file -> authors_list SEP . loans_list
    (16) loans_list -> . loans_list loan_entry
    (17) loans_list -> . loan_entry
    (18) loan_entry -> . NAME CL loan_books S

    NAME            shift and go to state 10

    loans_list                     shift and go to state 8
    loan_entry                     shift and go to state 9

state 6

    (2) authors_list -> authors_list author_entry .

    SEP             reduce using rule 2 (authors_list -> authors_list author_entry .)
    NAME            reduce using rule 2 (authors_list -> authors_list author_entry .)


state 7

    (4) author_entry -> NAME ARROW . books S
    (5) books -> . books CM book
    (6) books -> . book
    (7) book -> . ISBN CL NAME CL INT CL collocation
    (8) book -> . ISBN CL NAME CL INT

    ISBN            shift and go to state 13

    books                          shift and go to state 11
    book                           shift and go to state 12

state 8

    (1) file -> authors_list SEP loans_list .
    (16) loans_list -> loans_list . loan_entry
    (18) loan_entry -> . NAME CL loan_books S

    $end            reduce using rule 1 (file -> authors_list SEP loans_list .)
    NAME            shift and go to state 10

    loan_entry                     shift and go to state 14

state 9

    (17) loans_list -> loan_entry .

    NAME            reduce using rule 17 (loans_list -> loan_entry .)
    $end            reduce using rule 17 (loans_list -> loan_entry .)


state 10

    (18) loan_entry -> NAME . CL loan_books S

    CL              shift and go to state 15


state 11

    (4) author_entry -> NAME ARROW books . S
    (5) books -> books . CM book

    S               shift and go to state 16
    CM              shift and go to state 17


state 12

    (6) books -> book .

    S               reduce using rule 6 (books -> book .)
    CM              reduce using rule 6 (books -> book .)


state 13

    (7) book -> ISBN . CL NAME CL INT CL collocation
    (8) book -> ISBN . CL NAME CL INT

    CL              shift and go to state 18


state 14

    (16) loans_list -> loans_list loan_entry .

    NAME            reduce using rule 16 (loans_list -> loans_list loan_entry .)
    $end            reduce using rule 16 (loans_list -> loans_list loan_entry .)


state 15

    (18) loan_entry -> NAME CL . loan_books S
    (19) loan_books -> . loan_books CM DATE ISBN
    (20) loan_books -> . DATE ISBN

    DATE            shift and go to state 20

    loan_books                     shift and go to state 19

state 16

    (4) author_entry -> NAME ARROW books S .

    SEP             reduce using rule 4 (author_entry -> NAME ARROW books S .)
    NAME            reduce using rule 4 (author_entry -> NAME ARROW books S .)


state 17

    (5) books -> books CM . book
    (7) book -> . ISBN CL NAME CL INT CL collocation
    (8) book -> . ISBN CL NAME CL INT

    ISBN            shift and go to state 13

    book                           shift and go to state 21

state 18

    (7) book -> ISBN CL . NAME CL INT CL collocation
    (8) book -> ISBN CL . NAME CL INT

    NAME            shift and go to state 22


state 19

    (18) loan_entry -> NAME CL loan_books . S
    (19) loan_books -> loan_books . CM DATE ISBN

    S               shift and go to state 23
    CM              shift and go to state 24


state 20

    (20) loan_books -> DATE . ISBN

    ISBN            shift and go to state 25


state 21

    (5) books -> books CM book .

    S               reduce using rule 5 (books -> books CM book .)
    CM              reduce using rule 5 (books -> books CM book .)


state 22

    (7) book -> ISBN CL NAME . CL INT CL collocation
    (8) book -> ISBN CL NAME . CL INT

    CL              shift and go to state 26


state 23

    (18) loan_entry -> NAME CL loan_books S .

    NAME            reduce using rule 18 (loan_entry -> NAME CL loan_books S .)
    $end            reduce using rule 18 (loan_entry -> NAME CL loan_books S .)


state 24

    (19) loan_books -> loan_books CM . DATE ISBN

    DATE            shift and go to state 27


state 25

    (20) loan_books -> DATE ISBN .

    S               reduce using rule 20 (loan_books -> DATE ISBN .)
    CM              reduce using rule 20 (loan_books -> DATE ISBN .)


state 26

    (7) book -> ISBN CL NAME CL . INT CL collocation
    (8) book -> ISBN CL NAME CL . INT

    INT             shift and go to state 28


state 27

    (19) loan_books -> loan_books CM DATE . ISBN

    ISBN            shift and go to state 29


state 28

    (7) book -> ISBN CL NAME CL INT . CL collocation
    (8) book -> ISBN CL NAME CL INT .

    CL              shift and go to state 30
    S               reduce using rule 8 (book -> ISBN CL NAME CL INT .)
    CM              reduce using rule 8 (book -> ISBN CL NAME CL INT .)


state 29

    (19) loan_books -> loan_books CM DATE ISBN .

    S               reduce using rule 19 (loan_books -> loan_books CM DATE ISBN .)
    CM              reduce using rule 19 (loan_books -> loan_books CM DATE ISBN .)


state 30

    (7) book -> ISBN CL NAME CL INT CL . collocation
    (9) collocation -> . l_g INT LETTER
    (10) collocation -> . l_g INT
    (11) l_g -> . LI AV
    (12) l_g -> . LI SO
    (13) l_g -> . LS AV
    (14) l_g -> . LS SO
    (15) l_g -> . LS BO

    LI              shift and go to state 33
    LS              shift and go to state 34

    collocation                    shift and go to state 31
    l_g                            shift and go to state 32

state 31

    (7) book -> ISBN CL NAME CL INT CL collocation .

    S               reduce using rule 7 (book -> ISBN CL NAME CL INT CL collocation .)
    CM              reduce using rule 7 (book -> ISBN CL NAME CL INT CL collocation .)


state 32

    (9) collocation -> l_g . INT LETTER
    (10) collocation -> l_g . INT

    INT             shift and go to state 35


state 33

    (11) l_g -> LI . AV
    (12) l_g -> LI . SO

    AV              shift and go to state 36
    SO              shift and go to state 37


state 34

    (13) l_g -> LS . AV
    (14) l_g -> LS . SO
    (15) l_g -> LS . BO

    AV              shift and go to state 38
    SO              shift and go to state 39
    BO              shift and go to state 40


state 35

    (9) collocation -> l_g INT . LETTER
    (10) collocation -> l_g INT .

    LETTER          shift and go to state 41
    S               reduce using rule 10 (collocation -> l_g INT .)
    CM              reduce using rule 10 (collocation -> l_g INT .)


state 36

    (11) l_g -> LI AV .

    INT             reduce using rule 11 (l_g -> LI AV .)


state 37

    (12) l_g -> LI SO .

    INT             reduce using rule 12 (l_g -> LI SO .)


state 38

    (13) l_g -> LS AV .

    INT             reduce using rule 13 (l_g -> LS AV .)


state 39

    (14) l_g -> LS SO .

    INT             reduce using rule 14 (l_g -> LS SO .)


state 40

    (15) l_g -> LS BO .

    INT             reduce using rule 15 (l_g -> LS BO .)


state 41

    (9) collocation -> l_g INT LETTER .

    S               reduce using rule 9 (collocation -> l_g INT LETTER .)
    CM              reduce using rule 9 (collocation -> l_g INT LETTER .)

