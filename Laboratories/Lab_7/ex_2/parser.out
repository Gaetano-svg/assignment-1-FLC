Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EMPTY

Grammar

Rule 0     S' -> Decll
Rule 1     Decll -> Decll Decl S
Rule 2     Decll -> empty
Rule 3     Decll -> Decll error S
Rule 4     Decl -> T Vlist
Rule 5     T -> TYPE
Rule 6     Vlist -> V
Rule 7     Vlist -> Vlist CM NT0 V
Rule 8     NT0 -> empty
Rule 9     V -> Ptr ID Ary
Rule 10    Ptr -> empty
Rule 11    Ptr -> Ptr TIMES
Rule 12    Ary -> empty
Rule 13    Ary -> Ary SO NUM SC
Rule 14    empty -> <empty>

Terminals, with rules where they appear

CM                   : 7
EMPTY                : 
ID                   : 9
NUM                  : 13
S                    : 1 3
SC                   : 13
SO                   : 13
TIMES                : 11
TYPE                 : 5
error                : 3

Nonterminals, with rules where they appear

Ary                  : 9 13
Decl                 : 1
Decll                : 1 3 0
NT0                  : 7
Ptr                  : 9 11
T                    : 4
V                    : 6 7
Vlist                : 4 7
empty                : 2 8 10 12

Parsing method: LALR

state 0

    (0) S' -> . Decll
    (1) Decll -> . Decll Decl S
    (2) Decll -> . empty
    (3) Decll -> . Decll error S
    (14) empty -> .

    error           reduce using rule 14 (empty -> .)
    TYPE            reduce using rule 14 (empty -> .)
    $end            reduce using rule 14 (empty -> .)

    Decll                          shift and go to state 1
    empty                          shift and go to state 2

state 1

    (0) S' -> Decll .
    (1) Decll -> Decll . Decl S
    (3) Decll -> Decll . error S
    (4) Decl -> . T Vlist
    (5) T -> . TYPE

    error           shift and go to state 4
    TYPE            shift and go to state 6

    Decl                           shift and go to state 3
    T                              shift and go to state 5

state 2

    (2) Decll -> empty .

    error           reduce using rule 2 (Decll -> empty .)
    TYPE            reduce using rule 2 (Decll -> empty .)
    $end            reduce using rule 2 (Decll -> empty .)


state 3

    (1) Decll -> Decll Decl . S

    S               shift and go to state 7


state 4

    (3) Decll -> Decll error . S

    S               shift and go to state 8


state 5

    (4) Decl -> T . Vlist
    (6) Vlist -> . V
    (7) Vlist -> . Vlist CM NT0 V
    (9) V -> . Ptr ID Ary
    (10) Ptr -> . empty
    (11) Ptr -> . Ptr TIMES
    (14) empty -> .

    ID              reduce using rule 14 (empty -> .)
    TIMES           reduce using rule 14 (empty -> .)

    Vlist                          shift and go to state 9
    V                              shift and go to state 10
    Ptr                            shift and go to state 11
    empty                          shift and go to state 12

state 6

    (5) T -> TYPE .

    ID              reduce using rule 5 (T -> TYPE .)
    TIMES           reduce using rule 5 (T -> TYPE .)


state 7

    (1) Decll -> Decll Decl S .

    error           reduce using rule 1 (Decll -> Decll Decl S .)
    TYPE            reduce using rule 1 (Decll -> Decll Decl S .)
    $end            reduce using rule 1 (Decll -> Decll Decl S .)


state 8

    (3) Decll -> Decll error S .

    error           reduce using rule 3 (Decll -> Decll error S .)
    TYPE            reduce using rule 3 (Decll -> Decll error S .)
    $end            reduce using rule 3 (Decll -> Decll error S .)


state 9

    (4) Decl -> T Vlist .
    (7) Vlist -> Vlist . CM NT0 V

    S               reduce using rule 4 (Decl -> T Vlist .)
    CM              shift and go to state 13


state 10

    (6) Vlist -> V .

    CM              reduce using rule 6 (Vlist -> V .)
    S               reduce using rule 6 (Vlist -> V .)


state 11

    (9) V -> Ptr . ID Ary
    (11) Ptr -> Ptr . TIMES

    ID              shift and go to state 14
    TIMES           shift and go to state 15


state 12

    (10) Ptr -> empty .

    ID              reduce using rule 10 (Ptr -> empty .)
    TIMES           reduce using rule 10 (Ptr -> empty .)


state 13

    (7) Vlist -> Vlist CM . NT0 V
    (8) NT0 -> . empty
    (14) empty -> .

    ID              reduce using rule 14 (empty -> .)
    TIMES           reduce using rule 14 (empty -> .)

    NT0                            shift and go to state 16
    empty                          shift and go to state 17

state 14

    (9) V -> Ptr ID . Ary
    (12) Ary -> . empty
    (13) Ary -> . Ary SO NUM SC
    (14) empty -> .

    SO              reduce using rule 14 (empty -> .)
    CM              reduce using rule 14 (empty -> .)
    S               reduce using rule 14 (empty -> .)

    Ary                            shift and go to state 18
    empty                          shift and go to state 19

state 15

    (11) Ptr -> Ptr TIMES .

    ID              reduce using rule 11 (Ptr -> Ptr TIMES .)
    TIMES           reduce using rule 11 (Ptr -> Ptr TIMES .)


state 16

    (7) Vlist -> Vlist CM NT0 . V
    (9) V -> . Ptr ID Ary
    (10) Ptr -> . empty
    (11) Ptr -> . Ptr TIMES
    (14) empty -> .

    ID              reduce using rule 14 (empty -> .)
    TIMES           reduce using rule 14 (empty -> .)

    V                              shift and go to state 20
    Ptr                            shift and go to state 11
    empty                          shift and go to state 12

state 17

    (8) NT0 -> empty .

    ID              reduce using rule 8 (NT0 -> empty .)
    TIMES           reduce using rule 8 (NT0 -> empty .)


state 18

    (9) V -> Ptr ID Ary .
    (13) Ary -> Ary . SO NUM SC

    CM              reduce using rule 9 (V -> Ptr ID Ary .)
    S               reduce using rule 9 (V -> Ptr ID Ary .)
    SO              shift and go to state 21


state 19

    (12) Ary -> empty .

    SO              reduce using rule 12 (Ary -> empty .)
    CM              reduce using rule 12 (Ary -> empty .)
    S               reduce using rule 12 (Ary -> empty .)


state 20

    (7) Vlist -> Vlist CM NT0 V .

    CM              reduce using rule 7 (Vlist -> Vlist CM NT0 V .)
    S               reduce using rule 7 (Vlist -> Vlist CM NT0 V .)


state 21

    (13) Ary -> Ary SO . NUM SC

    NUM             shift and go to state 22


state 22

    (13) Ary -> Ary SO NUM . SC

    SC              shift and go to state 23


state 23

    (13) Ary -> Ary SO NUM SC .

    SO              reduce using rule 13 (Ary -> Ary SO NUM SC .)
    CM              reduce using rule 13 (Ary -> Ary SO NUM SC .)
    S               reduce using rule 13 (Ary -> Ary SO NUM SC .)

