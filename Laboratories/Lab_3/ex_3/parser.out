Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FLOATING
    comm
    directive
    nl
    ws

Grammar

Rule 0     S' -> prog_ok
Rule 1     prog_ok -> dec_prot_list function_list
Rule 2     prog_ok -> function_list
Rule 3     dec_prot_list -> dec_prot_list dec_prot
Rule 4     dec_prot_list -> dec_prot
Rule 5     dec_prot -> decl
Rule 6     dec_prot -> function_prot
Rule 7     function_list -> function
Rule 8     function_list -> function_list function
Rule 9     function_decl -> type pointer RBOPEN parameter_list RBCLOSED
Rule 10    function_decl -> void ID RBOPEN parameter_list RBCLOSED
Rule 11    function_decl -> STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED
Rule 12    function_decl -> STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED
Rule 13    function_prot -> function_decl SEMICOLON
Rule 14    function -> function_decl CBOPEN function_body CBCLOSED
Rule 15    function_body -> empty
Rule 16    function_body -> decl_list stmt_list
Rule 17    parameter_list -> parameter_list COMMA parameter
Rule 18    parameter_list -> parameter
Rule 19    parameter_list -> void
Rule 20    parameter -> type pointer
Rule 21    parameter -> type pointer SBOPEN SBCLOSED
Rule 22    decl_list -> decl
Rule 23    decl_list -> decl_list decl
Rule 24    decl -> type id_list SEMICOLON
Rule 25    decl -> STORAGE_SPEC type id_list SEMICOLON
Rule 26    id_list -> id_list COMMA ident
Rule 27    id_list -> ident
Rule 28    ident -> pointer
Rule 29    ident -> pointer SBOPEN CONST SBCLOSED
Rule 30    ident -> pointer EQUALS CONST
Rule 31    ident -> pointer EQUALS MINUS CONST
Rule 32    ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
Rule 33    ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED
Rule 34    pointer -> TIMES pointer
Rule 35    pointer -> ID
Rule 36    const_list -> const_list COMMA CONST
Rule 37    const_list -> CONST
Rule 38    string_const_list -> string_const_list COMMA STRINGCONST
Rule 39    string_const_list -> STRINGCONST
Rule 40    void -> VOID
Rule 41    void -> empty
Rule 42    type -> SIGN_MODIFIER TYPE
Rule 43    type -> LENG_MODIFIER TYPE
Rule 44    type -> SIGN_MODIFIER LENG_MODIFIER TYPE
Rule 45    type -> LENG_MODIFIER
Rule 46    type -> TYPE
Rule 47    stmt_list -> stmts
Rule 48    stmt_list -> empty
Rule 49    stmts -> stmts stmt
Rule 50    stmts -> stmt
Rule 51    block -> CBOPEN stmt_list CBCLOSED
Rule 52    stmt -> assign_stmt SEMICOLON
Rule 53    stmt -> if_stmt
Rule 54    stmt -> while_stmt
Rule 55    stmt -> block
Rule 56    stmt -> BREAK SEMICOLON
Rule 57    stmt -> return_stmt SEMICOLON
Rule 58    stmt -> for_stmt
Rule 59    stmt -> switch_stmt
Rule 60    stmt -> SEMICOLON
Rule 61    assign_stmt -> ID EQUALS expr
Rule 62    assign_stmt -> ID ASSOP expr
Rule 63    assign_stmt -> expr
Rule 64    term -> ID
Rule 65    term -> CONST
Rule 66    term -> ID RBOPEN arg_list RBCLOSED
Rule 67    term -> ID SBOPEN CONST SBCLOSED
Rule 68    term -> ID SBOPEN ID SBCLOSED
Rule 69    arg_list -> args
Rule 70    arg_list -> empty
Rule 71    args -> args COMMA arg
Rule 72    args -> arg
Rule 73    arg -> term
Rule 74    arg -> STRINGCONST
Rule 75    expr -> expr PLUS expr
Rule 76    expr -> expr MINUS expr
Rule 77    expr -> expr DIVIDE expr
Rule 78    expr -> expr TIMES expr
Rule 79    expr -> expr MOD expr
Rule 80    expr -> expr INCR
Rule 81    expr -> INCR expr
Rule 82    expr -> expr DECR
Rule 83    expr -> DECR expr
Rule 84    expr -> RBOPEN expr RBCLOSED
Rule 85    expr -> MINUS expr
Rule 86    expr -> PLUS expr
Rule 87    expr -> term
Rule 88    if_stmt -> IF RBOPEN cond RBCLOSED stmt
Rule 89    if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt
Rule 90    cond -> cond LOGOP cond
Rule 91    cond -> RBOPEN cond RBCLOSED
Rule 92    cond -> comparison
Rule 93    cond -> expr
Rule 94    comparison -> expr RELOP expr
Rule 95    while_stmt -> WHILE RBOPEN cond RBCLOSED stmt
Rule 96    for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
Rule 97    expr_list -> expr_list COMMA assign_stmt
Rule 98    expr_list -> assign_stmt
Rule 99    return_stmt -> RETURN expr
Rule 100   return_stmt -> RETURN
Rule 101   switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
Rule 102   switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
Rule 103   case_list -> case_list case_stmt
Rule 104   case_list -> case_stmt
Rule 105   case_stmt -> CASE CONST COLON stmt_list
Rule 106   default_stmt -> DEFAULT COLON stmt_list
Rule 107   empty -> <empty>

Terminals, with rules where they appear

ASSOP                : 62
BREAK                : 56
CASE                 : 105
CBCLOSED             : 14 32 33 51 101 102
CBOPEN               : 14 32 33 51 101 102
COLON                : 105 106
COMMA                : 17 26 36 38 71 97
CONST                : 29 30 31 36 37 65 67 105
DECR                 : 82 83
DEFAULT              : 106
DIVIDE               : 77
ELSE                 : 89
EQUALS               : 30 31 32 33 61
FLOATING             : 
FOR                  : 96
ID                   : 10 12 35 61 62 64 66 67 68 68 101 102
IF                   : 88 89
INCR                 : 80 81
LENG_MODIFIER        : 43 44 45
LOGOP                : 90
MINUS                : 31 76 85
MOD                  : 79
PLUS                 : 75 86
RBCLOSED             : 9 10 11 12 66 84 88 89 91 95 96 101 102
RBOPEN               : 9 10 11 12 66 84 88 89 91 95 96 101 102
RELOP                : 94
RETURN               : 99 100
SBCLOSED             : 21 29 32 33 67 68
SBOPEN               : 21 29 32 33 67 68
SEMICOLON            : 13 24 25 52 56 57 60 96 96
SIGN_MODIFIER        : 42 44
STORAGE_SPEC         : 11 12 25
STRINGCONST          : 38 39 74
SWITCH               : 101 102
TIMES                : 34 78
TYPE                 : 42 43 44 46
VOID                 : 40
WHILE                : 95
comm                 : 
directive            : 
error                : 
nl                   : 
ws                   : 

Nonterminals, with rules where they appear

arg                  : 71 72
arg_list             : 66
args                 : 69 71
assign_stmt          : 52 97 98
block                : 55
case_list            : 101 102 103
case_stmt            : 103 104
comparison           : 92
cond                 : 88 89 90 90 91 95 96
const_list           : 32 36
dec_prot             : 3 4
dec_prot_list        : 1 3
decl                 : 5 22 23
decl_list            : 16 23
default_stmt         : 102
empty                : 15 41 48 70
expr                 : 61 62 63 75 75 76 76 77 77 78 78 79 79 80 81 82 83 84 85 86 93 94 94 99
expr_list            : 96 96 97
for_stmt             : 58
function             : 7 8
function_body        : 14
function_decl        : 13 14
function_list        : 1 2 8
function_prot        : 6
id_list              : 24 25 26
ident                : 26 27
if_stmt              : 53
parameter            : 17 18
parameter_list       : 9 10 11 12 17
pointer              : 9 11 20 21 28 29 30 31 32 33 34
prog_ok              : 0
return_stmt          : 57
stmt                 : 49 50 88 89 89 95 96
stmt_list            : 16 51 105 106
stmts                : 47 49
string_const_list    : 33 38
switch_stmt          : 59
term                 : 73 87
type                 : 9 11 20 21 24 25
void                 : 10 12 19
while_stmt           : 54

Parsing method: LALR

state 0

    (0) S' -> . prog_ok
    (1) prog_ok -> . dec_prot_list function_list
    (2) prog_ok -> . function_list
    (3) dec_prot_list -> . dec_prot_list dec_prot
    (4) dec_prot_list -> . dec_prot
    (7) function_list -> . function
    (8) function_list -> . function_list function
    (5) dec_prot -> . decl
    (6) dec_prot -> . function_prot
    (14) function -> . function_decl CBOPEN function_body CBCLOSED
    (24) decl -> . type id_list SEMICOLON
    (25) decl -> . STORAGE_SPEC type id_list SEMICOLON
    (13) function_prot -> . function_decl SEMICOLON
    (9) function_decl -> . type pointer RBOPEN parameter_list RBCLOSED
    (10) function_decl -> . void ID RBOPEN parameter_list RBCLOSED
    (11) function_decl -> . STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED
    (12) function_decl -> . STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (40) void -> . VOID
    (41) void -> . empty
    (107) empty -> .

    STORAGE_SPEC    shift and go to state 10
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    VOID            shift and go to state 15
    ID              reduce using rule 107 (empty -> .)

    prog_ok                        shift and go to state 1
    dec_prot_list                  shift and go to state 2
    function_list                  shift and go to state 3
    dec_prot                       shift and go to state 4
    function                       shift and go to state 5
    decl                           shift and go to state 6
    function_prot                  shift and go to state 7
    function_decl                  shift and go to state 8
    type                           shift and go to state 9
    void                           shift and go to state 11
    empty                          shift and go to state 16

state 1

    (0) S' -> prog_ok .



state 2

    (1) prog_ok -> dec_prot_list . function_list
    (3) dec_prot_list -> dec_prot_list . dec_prot
    (7) function_list -> . function
    (8) function_list -> . function_list function
    (5) dec_prot -> . decl
    (6) dec_prot -> . function_prot
    (14) function -> . function_decl CBOPEN function_body CBCLOSED
    (24) decl -> . type id_list SEMICOLON
    (25) decl -> . STORAGE_SPEC type id_list SEMICOLON
    (13) function_prot -> . function_decl SEMICOLON
    (9) function_decl -> . type pointer RBOPEN parameter_list RBCLOSED
    (10) function_decl -> . void ID RBOPEN parameter_list RBCLOSED
    (11) function_decl -> . STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED
    (12) function_decl -> . STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (40) void -> . VOID
    (41) void -> . empty
    (107) empty -> .

    STORAGE_SPEC    shift and go to state 10
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    VOID            shift and go to state 15
    ID              reduce using rule 107 (empty -> .)

    function_list                  shift and go to state 17
    dec_prot                       shift and go to state 18
    function                       shift and go to state 5
    decl                           shift and go to state 6
    function_prot                  shift and go to state 7
    function_decl                  shift and go to state 8
    type                           shift and go to state 9
    void                           shift and go to state 11
    empty                          shift and go to state 16

state 3

    (2) prog_ok -> function_list .
    (8) function_list -> function_list . function
    (14) function -> . function_decl CBOPEN function_body CBCLOSED
    (9) function_decl -> . type pointer RBOPEN parameter_list RBCLOSED
    (10) function_decl -> . void ID RBOPEN parameter_list RBCLOSED
    (11) function_decl -> . STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED
    (12) function_decl -> . STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (40) void -> . VOID
    (41) void -> . empty
    (107) empty -> .

    $end            reduce using rule 2 (prog_ok -> function_list .)
    STORAGE_SPEC    shift and go to state 22
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    VOID            shift and go to state 15
    ID              reduce using rule 107 (empty -> .)

    function                       shift and go to state 19
    function_decl                  shift and go to state 20
    type                           shift and go to state 21
    void                           shift and go to state 11
    empty                          shift and go to state 16

state 4

    (4) dec_prot_list -> dec_prot .

    STORAGE_SPEC    reduce using rule 4 (dec_prot_list -> dec_prot .)
    SIGN_MODIFIER   reduce using rule 4 (dec_prot_list -> dec_prot .)
    LENG_MODIFIER   reduce using rule 4 (dec_prot_list -> dec_prot .)
    TYPE            reduce using rule 4 (dec_prot_list -> dec_prot .)
    VOID            reduce using rule 4 (dec_prot_list -> dec_prot .)
    ID              reduce using rule 4 (dec_prot_list -> dec_prot .)


state 5

    (7) function_list -> function .

    STORAGE_SPEC    reduce using rule 7 (function_list -> function .)
    SIGN_MODIFIER   reduce using rule 7 (function_list -> function .)
    LENG_MODIFIER   reduce using rule 7 (function_list -> function .)
    TYPE            reduce using rule 7 (function_list -> function .)
    VOID            reduce using rule 7 (function_list -> function .)
    ID              reduce using rule 7 (function_list -> function .)
    $end            reduce using rule 7 (function_list -> function .)


state 6

    (5) dec_prot -> decl .

    STORAGE_SPEC    reduce using rule 5 (dec_prot -> decl .)
    SIGN_MODIFIER   reduce using rule 5 (dec_prot -> decl .)
    LENG_MODIFIER   reduce using rule 5 (dec_prot -> decl .)
    TYPE            reduce using rule 5 (dec_prot -> decl .)
    VOID            reduce using rule 5 (dec_prot -> decl .)
    ID              reduce using rule 5 (dec_prot -> decl .)


state 7

    (6) dec_prot -> function_prot .

    STORAGE_SPEC    reduce using rule 6 (dec_prot -> function_prot .)
    SIGN_MODIFIER   reduce using rule 6 (dec_prot -> function_prot .)
    LENG_MODIFIER   reduce using rule 6 (dec_prot -> function_prot .)
    TYPE            reduce using rule 6 (dec_prot -> function_prot .)
    VOID            reduce using rule 6 (dec_prot -> function_prot .)
    ID              reduce using rule 6 (dec_prot -> function_prot .)


state 8

    (14) function -> function_decl . CBOPEN function_body CBCLOSED
    (13) function_prot -> function_decl . SEMICOLON

    CBOPEN          shift and go to state 23
    SEMICOLON       shift and go to state 24


state 9

    (24) decl -> type . id_list SEMICOLON
    (9) function_decl -> type . pointer RBOPEN parameter_list RBCLOSED
    (26) id_list -> . id_list COMMA ident
    (27) id_list -> . ident
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID
    (28) ident -> . pointer
    (29) ident -> . pointer SBOPEN CONST SBCLOSED
    (30) ident -> . pointer EQUALS CONST
    (31) ident -> . pointer EQUALS MINUS CONST
    (32) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    id_list                        shift and go to state 25
    pointer                        shift and go to state 26
    ident                          shift and go to state 27

state 10

    (25) decl -> STORAGE_SPEC . type id_list SEMICOLON
    (11) function_decl -> STORAGE_SPEC . type pointer RBOPEN parameter_list RBCLOSED
    (12) function_decl -> STORAGE_SPEC . void ID RBOPEN parameter_list RBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (40) void -> . VOID
    (41) void -> . empty
    (107) empty -> .

    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    VOID            shift and go to state 15
    ID              reduce using rule 107 (empty -> .)

    type                           shift and go to state 30
    void                           shift and go to state 31
    empty                          shift and go to state 16

state 11

    (10) function_decl -> void . ID RBOPEN parameter_list RBCLOSED

    ID              shift and go to state 32


state 12

    (42) type -> SIGN_MODIFIER . TYPE
    (44) type -> SIGN_MODIFIER . LENG_MODIFIER TYPE

    TYPE            shift and go to state 33
    LENG_MODIFIER   shift and go to state 34


state 13

    (46) type -> TYPE .

    TIMES           reduce using rule 46 (type -> TYPE .)
    ID              reduce using rule 46 (type -> TYPE .)


state 14

    (43) type -> LENG_MODIFIER . TYPE
    (45) type -> LENG_MODIFIER .

    TYPE            shift and go to state 35
    TIMES           reduce using rule 45 (type -> LENG_MODIFIER .)
    ID              reduce using rule 45 (type -> LENG_MODIFIER .)


state 15

    (40) void -> VOID .

    ID              reduce using rule 40 (void -> VOID .)
    RBCLOSED        reduce using rule 40 (void -> VOID .)
    COMMA           reduce using rule 40 (void -> VOID .)


state 16

    (41) void -> empty .

    ID              reduce using rule 41 (void -> empty .)
    RBCLOSED        reduce using rule 41 (void -> empty .)
    COMMA           reduce using rule 41 (void -> empty .)


state 17

    (1) prog_ok -> dec_prot_list function_list .
    (8) function_list -> function_list . function
    (14) function -> . function_decl CBOPEN function_body CBCLOSED
    (9) function_decl -> . type pointer RBOPEN parameter_list RBCLOSED
    (10) function_decl -> . void ID RBOPEN parameter_list RBCLOSED
    (11) function_decl -> . STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED
    (12) function_decl -> . STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (40) void -> . VOID
    (41) void -> . empty
    (107) empty -> .

    $end            reduce using rule 1 (prog_ok -> dec_prot_list function_list .)
    STORAGE_SPEC    shift and go to state 22
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    VOID            shift and go to state 15
    ID              reduce using rule 107 (empty -> .)

    function                       shift and go to state 19
    function_decl                  shift and go to state 20
    type                           shift and go to state 21
    void                           shift and go to state 11
    empty                          shift and go to state 16

state 18

    (3) dec_prot_list -> dec_prot_list dec_prot .

    STORAGE_SPEC    reduce using rule 3 (dec_prot_list -> dec_prot_list dec_prot .)
    SIGN_MODIFIER   reduce using rule 3 (dec_prot_list -> dec_prot_list dec_prot .)
    LENG_MODIFIER   reduce using rule 3 (dec_prot_list -> dec_prot_list dec_prot .)
    TYPE            reduce using rule 3 (dec_prot_list -> dec_prot_list dec_prot .)
    VOID            reduce using rule 3 (dec_prot_list -> dec_prot_list dec_prot .)
    ID              reduce using rule 3 (dec_prot_list -> dec_prot_list dec_prot .)


state 19

    (8) function_list -> function_list function .

    STORAGE_SPEC    reduce using rule 8 (function_list -> function_list function .)
    SIGN_MODIFIER   reduce using rule 8 (function_list -> function_list function .)
    LENG_MODIFIER   reduce using rule 8 (function_list -> function_list function .)
    TYPE            reduce using rule 8 (function_list -> function_list function .)
    VOID            reduce using rule 8 (function_list -> function_list function .)
    ID              reduce using rule 8 (function_list -> function_list function .)
    $end            reduce using rule 8 (function_list -> function_list function .)


state 20

    (14) function -> function_decl . CBOPEN function_body CBCLOSED

    CBOPEN          shift and go to state 23


state 21

    (9) function_decl -> type . pointer RBOPEN parameter_list RBCLOSED
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    pointer                        shift and go to state 36

state 22

    (11) function_decl -> STORAGE_SPEC . type pointer RBOPEN parameter_list RBCLOSED
    (12) function_decl -> STORAGE_SPEC . void ID RBOPEN parameter_list RBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (40) void -> . VOID
    (41) void -> . empty
    (107) empty -> .

    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    VOID            shift and go to state 15
    ID              reduce using rule 107 (empty -> .)

    type                           shift and go to state 37
    void                           shift and go to state 31
    empty                          shift and go to state 16

state 23

    (14) function -> function_decl CBOPEN . function_body CBCLOSED
    (15) function_body -> . empty
    (16) function_body -> . decl_list stmt_list
    (107) empty -> .
    (22) decl_list -> . decl
    (23) decl_list -> . decl_list decl
    (24) decl -> . type id_list SEMICOLON
    (25) decl -> . STORAGE_SPEC type id_list SEMICOLON
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE

    CBCLOSED        reduce using rule 107 (empty -> .)
    STORAGE_SPEC    shift and go to state 43
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13

    function_body                  shift and go to state 38
    empty                          shift and go to state 39
    decl_list                      shift and go to state 40
    decl                           shift and go to state 41
    type                           shift and go to state 42

state 24

    (13) function_prot -> function_decl SEMICOLON .

    STORAGE_SPEC    reduce using rule 13 (function_prot -> function_decl SEMICOLON .)
    SIGN_MODIFIER   reduce using rule 13 (function_prot -> function_decl SEMICOLON .)
    LENG_MODIFIER   reduce using rule 13 (function_prot -> function_decl SEMICOLON .)
    TYPE            reduce using rule 13 (function_prot -> function_decl SEMICOLON .)
    VOID            reduce using rule 13 (function_prot -> function_decl SEMICOLON .)
    ID              reduce using rule 13 (function_prot -> function_decl SEMICOLON .)


state 25

    (24) decl -> type id_list . SEMICOLON
    (26) id_list -> id_list . COMMA ident

    SEMICOLON       shift and go to state 44
    COMMA           shift and go to state 45


state 26

    (9) function_decl -> type pointer . RBOPEN parameter_list RBCLOSED
    (28) ident -> pointer .
    (29) ident -> pointer . SBOPEN CONST SBCLOSED
    (30) ident -> pointer . EQUALS CONST
    (31) ident -> pointer . EQUALS MINUS CONST
    (32) ident -> pointer . SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> pointer . SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED

    RBOPEN          shift and go to state 46
    SEMICOLON       reduce using rule 28 (ident -> pointer .)
    COMMA           reduce using rule 28 (ident -> pointer .)
    SBOPEN          shift and go to state 47
    EQUALS          shift and go to state 48


state 27

    (27) id_list -> ident .

    SEMICOLON       reduce using rule 27 (id_list -> ident .)
    COMMA           reduce using rule 27 (id_list -> ident .)


state 28

    (34) pointer -> TIMES . pointer
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    pointer                        shift and go to state 49

state 29

    (35) pointer -> ID .

    RBOPEN          reduce using rule 35 (pointer -> ID .)
    SBOPEN          reduce using rule 35 (pointer -> ID .)
    EQUALS          reduce using rule 35 (pointer -> ID .)
    SEMICOLON       reduce using rule 35 (pointer -> ID .)
    COMMA           reduce using rule 35 (pointer -> ID .)
    RBCLOSED        reduce using rule 35 (pointer -> ID .)


state 30

    (25) decl -> STORAGE_SPEC type . id_list SEMICOLON
    (11) function_decl -> STORAGE_SPEC type . pointer RBOPEN parameter_list RBCLOSED
    (26) id_list -> . id_list COMMA ident
    (27) id_list -> . ident
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID
    (28) ident -> . pointer
    (29) ident -> . pointer SBOPEN CONST SBCLOSED
    (30) ident -> . pointer EQUALS CONST
    (31) ident -> . pointer EQUALS MINUS CONST
    (32) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    id_list                        shift and go to state 50
    pointer                        shift and go to state 51
    ident                          shift and go to state 27

state 31

    (12) function_decl -> STORAGE_SPEC void . ID RBOPEN parameter_list RBCLOSED

    ID              shift and go to state 52


state 32

    (10) function_decl -> void ID . RBOPEN parameter_list RBCLOSED

    RBOPEN          shift and go to state 53


state 33

    (42) type -> SIGN_MODIFIER TYPE .

    TIMES           reduce using rule 42 (type -> SIGN_MODIFIER TYPE .)
    ID              reduce using rule 42 (type -> SIGN_MODIFIER TYPE .)


state 34

    (44) type -> SIGN_MODIFIER LENG_MODIFIER . TYPE

    TYPE            shift and go to state 54


state 35

    (43) type -> LENG_MODIFIER TYPE .

    TIMES           reduce using rule 43 (type -> LENG_MODIFIER TYPE .)
    ID              reduce using rule 43 (type -> LENG_MODIFIER TYPE .)


state 36

    (9) function_decl -> type pointer . RBOPEN parameter_list RBCLOSED

    RBOPEN          shift and go to state 46


state 37

    (11) function_decl -> STORAGE_SPEC type . pointer RBOPEN parameter_list RBCLOSED
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    pointer                        shift and go to state 55

state 38

    (14) function -> function_decl CBOPEN function_body . CBCLOSED

    CBCLOSED        shift and go to state 56


state 39

    (15) function_body -> empty .

    CBCLOSED        reduce using rule 15 (function_body -> empty .)


state 40

    (16) function_body -> decl_list . stmt_list
    (23) decl_list -> decl_list . decl
    (47) stmt_list -> . stmts
    (48) stmt_list -> . empty
    (24) decl -> . type id_list SEMICOLON
    (25) decl -> . STORAGE_SPEC type id_list SEMICOLON
    (49) stmts -> . stmts stmt
    (50) stmts -> . stmt
    (107) empty -> .
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    STORAGE_SPEC    shift and go to state 43
    CBCLOSED        reduce using rule 107 (empty -> .)
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt_list                      shift and go to state 57
    decl                           shift and go to state 58
    stmts                          shift and go to state 59
    empty                          shift and go to state 60
    type                           shift and go to state 42
    stmt                           shift and go to state 62
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 41

    (22) decl_list -> decl .

    STORAGE_SPEC    reduce using rule 22 (decl_list -> decl .)
    SIGN_MODIFIER   reduce using rule 22 (decl_list -> decl .)
    LENG_MODIFIER   reduce using rule 22 (decl_list -> decl .)
    TYPE            reduce using rule 22 (decl_list -> decl .)
    BREAK           reduce using rule 22 (decl_list -> decl .)
    SEMICOLON       reduce using rule 22 (decl_list -> decl .)
    ID              reduce using rule 22 (decl_list -> decl .)
    IF              reduce using rule 22 (decl_list -> decl .)
    WHILE           reduce using rule 22 (decl_list -> decl .)
    CBOPEN          reduce using rule 22 (decl_list -> decl .)
    RETURN          reduce using rule 22 (decl_list -> decl .)
    FOR             reduce using rule 22 (decl_list -> decl .)
    SWITCH          reduce using rule 22 (decl_list -> decl .)
    INCR            reduce using rule 22 (decl_list -> decl .)
    DECR            reduce using rule 22 (decl_list -> decl .)
    RBOPEN          reduce using rule 22 (decl_list -> decl .)
    MINUS           reduce using rule 22 (decl_list -> decl .)
    PLUS            reduce using rule 22 (decl_list -> decl .)
    CONST           reduce using rule 22 (decl_list -> decl .)
    CBCLOSED        reduce using rule 22 (decl_list -> decl .)


state 42

    (24) decl -> type . id_list SEMICOLON
    (26) id_list -> . id_list COMMA ident
    (27) id_list -> . ident
    (28) ident -> . pointer
    (29) ident -> . pointer SBOPEN CONST SBCLOSED
    (30) ident -> . pointer EQUALS CONST
    (31) ident -> . pointer EQUALS MINUS CONST
    (32) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    id_list                        shift and go to state 25
    ident                          shift and go to state 27
    pointer                        shift and go to state 86

state 43

    (25) decl -> STORAGE_SPEC . type id_list SEMICOLON
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE

    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13

    type                           shift and go to state 87

state 44

    (24) decl -> type id_list SEMICOLON .

    STORAGE_SPEC    reduce using rule 24 (decl -> type id_list SEMICOLON .)
    SIGN_MODIFIER   reduce using rule 24 (decl -> type id_list SEMICOLON .)
    LENG_MODIFIER   reduce using rule 24 (decl -> type id_list SEMICOLON .)
    TYPE            reduce using rule 24 (decl -> type id_list SEMICOLON .)
    VOID            reduce using rule 24 (decl -> type id_list SEMICOLON .)
    ID              reduce using rule 24 (decl -> type id_list SEMICOLON .)
    BREAK           reduce using rule 24 (decl -> type id_list SEMICOLON .)
    SEMICOLON       reduce using rule 24 (decl -> type id_list SEMICOLON .)
    IF              reduce using rule 24 (decl -> type id_list SEMICOLON .)
    WHILE           reduce using rule 24 (decl -> type id_list SEMICOLON .)
    CBOPEN          reduce using rule 24 (decl -> type id_list SEMICOLON .)
    RETURN          reduce using rule 24 (decl -> type id_list SEMICOLON .)
    FOR             reduce using rule 24 (decl -> type id_list SEMICOLON .)
    SWITCH          reduce using rule 24 (decl -> type id_list SEMICOLON .)
    INCR            reduce using rule 24 (decl -> type id_list SEMICOLON .)
    DECR            reduce using rule 24 (decl -> type id_list SEMICOLON .)
    RBOPEN          reduce using rule 24 (decl -> type id_list SEMICOLON .)
    MINUS           reduce using rule 24 (decl -> type id_list SEMICOLON .)
    PLUS            reduce using rule 24 (decl -> type id_list SEMICOLON .)
    CONST           reduce using rule 24 (decl -> type id_list SEMICOLON .)
    CBCLOSED        reduce using rule 24 (decl -> type id_list SEMICOLON .)


state 45

    (26) id_list -> id_list COMMA . ident
    (28) ident -> . pointer
    (29) ident -> . pointer SBOPEN CONST SBCLOSED
    (30) ident -> . pointer EQUALS CONST
    (31) ident -> . pointer EQUALS MINUS CONST
    (32) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    ident                          shift and go to state 88
    pointer                        shift and go to state 86

state 46

    (9) function_decl -> type pointer RBOPEN . parameter_list RBCLOSED
    (17) parameter_list -> . parameter_list COMMA parameter
    (18) parameter_list -> . parameter
    (19) parameter_list -> . void
    (20) parameter -> . type pointer
    (21) parameter -> . type pointer SBOPEN SBCLOSED
    (40) void -> . VOID
    (41) void -> . empty
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (107) empty -> .

    VOID            shift and go to state 15
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    RBCLOSED        reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    type                           shift and go to state 89
    parameter_list                 shift and go to state 90
    parameter                      shift and go to state 91
    void                           shift and go to state 92
    empty                          shift and go to state 16

state 47

    (29) ident -> pointer SBOPEN . CONST SBCLOSED
    (32) ident -> pointer SBOPEN . SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> pointer SBOPEN . SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED

    CONST           shift and go to state 93
    SBCLOSED        shift and go to state 94


state 48

    (30) ident -> pointer EQUALS . CONST
    (31) ident -> pointer EQUALS . MINUS CONST

    CONST           shift and go to state 95
    MINUS           shift and go to state 96


state 49

    (34) pointer -> TIMES pointer .

    RBOPEN          reduce using rule 34 (pointer -> TIMES pointer .)
    SBOPEN          reduce using rule 34 (pointer -> TIMES pointer .)
    EQUALS          reduce using rule 34 (pointer -> TIMES pointer .)
    SEMICOLON       reduce using rule 34 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 34 (pointer -> TIMES pointer .)
    RBCLOSED        reduce using rule 34 (pointer -> TIMES pointer .)


state 50

    (25) decl -> STORAGE_SPEC type id_list . SEMICOLON
    (26) id_list -> id_list . COMMA ident

    SEMICOLON       shift and go to state 97
    COMMA           shift and go to state 45


state 51

    (11) function_decl -> STORAGE_SPEC type pointer . RBOPEN parameter_list RBCLOSED
    (28) ident -> pointer .
    (29) ident -> pointer . SBOPEN CONST SBCLOSED
    (30) ident -> pointer . EQUALS CONST
    (31) ident -> pointer . EQUALS MINUS CONST
    (32) ident -> pointer . SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> pointer . SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED

    RBOPEN          shift and go to state 98
    SEMICOLON       reduce using rule 28 (ident -> pointer .)
    COMMA           reduce using rule 28 (ident -> pointer .)
    SBOPEN          shift and go to state 47
    EQUALS          shift and go to state 48


state 52

    (12) function_decl -> STORAGE_SPEC void ID . RBOPEN parameter_list RBCLOSED

    RBOPEN          shift and go to state 99


state 53

    (10) function_decl -> void ID RBOPEN . parameter_list RBCLOSED
    (17) parameter_list -> . parameter_list COMMA parameter
    (18) parameter_list -> . parameter
    (19) parameter_list -> . void
    (20) parameter -> . type pointer
    (21) parameter -> . type pointer SBOPEN SBCLOSED
    (40) void -> . VOID
    (41) void -> . empty
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (107) empty -> .

    VOID            shift and go to state 15
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    RBCLOSED        reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    void                           shift and go to state 92
    parameter_list                 shift and go to state 100
    parameter                      shift and go to state 91
    type                           shift and go to state 89
    empty                          shift and go to state 16

state 54

    (44) type -> SIGN_MODIFIER LENG_MODIFIER TYPE .

    TIMES           reduce using rule 44 (type -> SIGN_MODIFIER LENG_MODIFIER TYPE .)
    ID              reduce using rule 44 (type -> SIGN_MODIFIER LENG_MODIFIER TYPE .)


state 55

    (11) function_decl -> STORAGE_SPEC type pointer . RBOPEN parameter_list RBCLOSED

    RBOPEN          shift and go to state 98


state 56

    (14) function -> function_decl CBOPEN function_body CBCLOSED .

    STORAGE_SPEC    reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)
    SIGN_MODIFIER   reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)
    LENG_MODIFIER   reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)
    TYPE            reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)
    VOID            reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)
    ID              reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)
    $end            reduce using rule 14 (function -> function_decl CBOPEN function_body CBCLOSED .)


state 57

    (16) function_body -> decl_list stmt_list .

    CBCLOSED        reduce using rule 16 (function_body -> decl_list stmt_list .)


state 58

    (23) decl_list -> decl_list decl .

    STORAGE_SPEC    reduce using rule 23 (decl_list -> decl_list decl .)
    SIGN_MODIFIER   reduce using rule 23 (decl_list -> decl_list decl .)
    LENG_MODIFIER   reduce using rule 23 (decl_list -> decl_list decl .)
    TYPE            reduce using rule 23 (decl_list -> decl_list decl .)
    BREAK           reduce using rule 23 (decl_list -> decl_list decl .)
    SEMICOLON       reduce using rule 23 (decl_list -> decl_list decl .)
    ID              reduce using rule 23 (decl_list -> decl_list decl .)
    IF              reduce using rule 23 (decl_list -> decl_list decl .)
    WHILE           reduce using rule 23 (decl_list -> decl_list decl .)
    CBOPEN          reduce using rule 23 (decl_list -> decl_list decl .)
    RETURN          reduce using rule 23 (decl_list -> decl_list decl .)
    FOR             reduce using rule 23 (decl_list -> decl_list decl .)
    SWITCH          reduce using rule 23 (decl_list -> decl_list decl .)
    INCR            reduce using rule 23 (decl_list -> decl_list decl .)
    DECR            reduce using rule 23 (decl_list -> decl_list decl .)
    RBOPEN          reduce using rule 23 (decl_list -> decl_list decl .)
    MINUS           reduce using rule 23 (decl_list -> decl_list decl .)
    PLUS            reduce using rule 23 (decl_list -> decl_list decl .)
    CONST           reduce using rule 23 (decl_list -> decl_list decl .)
    CBCLOSED        reduce using rule 23 (decl_list -> decl_list decl .)


state 59

    (47) stmt_list -> stmts .
    (49) stmts -> stmts . stmt
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    CBCLOSED        reduce using rule 47 (stmt_list -> stmts .)
    DEFAULT         reduce using rule 47 (stmt_list -> stmts .)
    CASE            reduce using rule 47 (stmt_list -> stmts .)
    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt                           shift and go to state 101
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 60

    (48) stmt_list -> empty .

    CBCLOSED        reduce using rule 48 (stmt_list -> empty .)
    DEFAULT         reduce using rule 48 (stmt_list -> empty .)
    CASE            reduce using rule 48 (stmt_list -> empty .)


state 61

    (60) stmt -> SEMICOLON .

    BREAK           reduce using rule 60 (stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 60 (stmt -> SEMICOLON .)
    ID              reduce using rule 60 (stmt -> SEMICOLON .)
    IF              reduce using rule 60 (stmt -> SEMICOLON .)
    WHILE           reduce using rule 60 (stmt -> SEMICOLON .)
    CBOPEN          reduce using rule 60 (stmt -> SEMICOLON .)
    RETURN          reduce using rule 60 (stmt -> SEMICOLON .)
    FOR             reduce using rule 60 (stmt -> SEMICOLON .)
    SWITCH          reduce using rule 60 (stmt -> SEMICOLON .)
    INCR            reduce using rule 60 (stmt -> SEMICOLON .)
    DECR            reduce using rule 60 (stmt -> SEMICOLON .)
    RBOPEN          reduce using rule 60 (stmt -> SEMICOLON .)
    MINUS           reduce using rule 60 (stmt -> SEMICOLON .)
    PLUS            reduce using rule 60 (stmt -> SEMICOLON .)
    CONST           reduce using rule 60 (stmt -> SEMICOLON .)
    CBCLOSED        reduce using rule 60 (stmt -> SEMICOLON .)
    DEFAULT         reduce using rule 60 (stmt -> SEMICOLON .)
    CASE            reduce using rule 60 (stmt -> SEMICOLON .)
    ELSE            reduce using rule 60 (stmt -> SEMICOLON .)


state 62

    (50) stmts -> stmt .

    BREAK           reduce using rule 50 (stmts -> stmt .)
    SEMICOLON       reduce using rule 50 (stmts -> stmt .)
    ID              reduce using rule 50 (stmts -> stmt .)
    IF              reduce using rule 50 (stmts -> stmt .)
    WHILE           reduce using rule 50 (stmts -> stmt .)
    CBOPEN          reduce using rule 50 (stmts -> stmt .)
    RETURN          reduce using rule 50 (stmts -> stmt .)
    FOR             reduce using rule 50 (stmts -> stmt .)
    SWITCH          reduce using rule 50 (stmts -> stmt .)
    INCR            reduce using rule 50 (stmts -> stmt .)
    DECR            reduce using rule 50 (stmts -> stmt .)
    RBOPEN          reduce using rule 50 (stmts -> stmt .)
    MINUS           reduce using rule 50 (stmts -> stmt .)
    PLUS            reduce using rule 50 (stmts -> stmt .)
    CONST           reduce using rule 50 (stmts -> stmt .)
    CBCLOSED        reduce using rule 50 (stmts -> stmt .)
    DEFAULT         reduce using rule 50 (stmts -> stmt .)
    CASE            reduce using rule 50 (stmts -> stmt .)


state 63

    (52) stmt -> assign_stmt . SEMICOLON

    SEMICOLON       shift and go to state 102


state 64

    (53) stmt -> if_stmt .

    BREAK           reduce using rule 53 (stmt -> if_stmt .)
    SEMICOLON       reduce using rule 53 (stmt -> if_stmt .)
    ID              reduce using rule 53 (stmt -> if_stmt .)
    IF              reduce using rule 53 (stmt -> if_stmt .)
    WHILE           reduce using rule 53 (stmt -> if_stmt .)
    CBOPEN          reduce using rule 53 (stmt -> if_stmt .)
    RETURN          reduce using rule 53 (stmt -> if_stmt .)
    FOR             reduce using rule 53 (stmt -> if_stmt .)
    SWITCH          reduce using rule 53 (stmt -> if_stmt .)
    INCR            reduce using rule 53 (stmt -> if_stmt .)
    DECR            reduce using rule 53 (stmt -> if_stmt .)
    RBOPEN          reduce using rule 53 (stmt -> if_stmt .)
    MINUS           reduce using rule 53 (stmt -> if_stmt .)
    PLUS            reduce using rule 53 (stmt -> if_stmt .)
    CONST           reduce using rule 53 (stmt -> if_stmt .)
    CBCLOSED        reduce using rule 53 (stmt -> if_stmt .)
    DEFAULT         reduce using rule 53 (stmt -> if_stmt .)
    CASE            reduce using rule 53 (stmt -> if_stmt .)
    ELSE            reduce using rule 53 (stmt -> if_stmt .)


state 65

    (54) stmt -> while_stmt .

    BREAK           reduce using rule 54 (stmt -> while_stmt .)
    SEMICOLON       reduce using rule 54 (stmt -> while_stmt .)
    ID              reduce using rule 54 (stmt -> while_stmt .)
    IF              reduce using rule 54 (stmt -> while_stmt .)
    WHILE           reduce using rule 54 (stmt -> while_stmt .)
    CBOPEN          reduce using rule 54 (stmt -> while_stmt .)
    RETURN          reduce using rule 54 (stmt -> while_stmt .)
    FOR             reduce using rule 54 (stmt -> while_stmt .)
    SWITCH          reduce using rule 54 (stmt -> while_stmt .)
    INCR            reduce using rule 54 (stmt -> while_stmt .)
    DECR            reduce using rule 54 (stmt -> while_stmt .)
    RBOPEN          reduce using rule 54 (stmt -> while_stmt .)
    MINUS           reduce using rule 54 (stmt -> while_stmt .)
    PLUS            reduce using rule 54 (stmt -> while_stmt .)
    CONST           reduce using rule 54 (stmt -> while_stmt .)
    CBCLOSED        reduce using rule 54 (stmt -> while_stmt .)
    DEFAULT         reduce using rule 54 (stmt -> while_stmt .)
    CASE            reduce using rule 54 (stmt -> while_stmt .)
    ELSE            reduce using rule 54 (stmt -> while_stmt .)


state 66

    (55) stmt -> block .

    BREAK           reduce using rule 55 (stmt -> block .)
    SEMICOLON       reduce using rule 55 (stmt -> block .)
    ID              reduce using rule 55 (stmt -> block .)
    IF              reduce using rule 55 (stmt -> block .)
    WHILE           reduce using rule 55 (stmt -> block .)
    CBOPEN          reduce using rule 55 (stmt -> block .)
    RETURN          reduce using rule 55 (stmt -> block .)
    FOR             reduce using rule 55 (stmt -> block .)
    SWITCH          reduce using rule 55 (stmt -> block .)
    INCR            reduce using rule 55 (stmt -> block .)
    DECR            reduce using rule 55 (stmt -> block .)
    RBOPEN          reduce using rule 55 (stmt -> block .)
    MINUS           reduce using rule 55 (stmt -> block .)
    PLUS            reduce using rule 55 (stmt -> block .)
    CONST           reduce using rule 55 (stmt -> block .)
    CBCLOSED        reduce using rule 55 (stmt -> block .)
    DEFAULT         reduce using rule 55 (stmt -> block .)
    CASE            reduce using rule 55 (stmt -> block .)
    ELSE            reduce using rule 55 (stmt -> block .)


state 67

    (56) stmt -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 103


state 68

    (57) stmt -> return_stmt . SEMICOLON

    SEMICOLON       shift and go to state 104


state 69

    (58) stmt -> for_stmt .

    BREAK           reduce using rule 58 (stmt -> for_stmt .)
    SEMICOLON       reduce using rule 58 (stmt -> for_stmt .)
    ID              reduce using rule 58 (stmt -> for_stmt .)
    IF              reduce using rule 58 (stmt -> for_stmt .)
    WHILE           reduce using rule 58 (stmt -> for_stmt .)
    CBOPEN          reduce using rule 58 (stmt -> for_stmt .)
    RETURN          reduce using rule 58 (stmt -> for_stmt .)
    FOR             reduce using rule 58 (stmt -> for_stmt .)
    SWITCH          reduce using rule 58 (stmt -> for_stmt .)
    INCR            reduce using rule 58 (stmt -> for_stmt .)
    DECR            reduce using rule 58 (stmt -> for_stmt .)
    RBOPEN          reduce using rule 58 (stmt -> for_stmt .)
    MINUS           reduce using rule 58 (stmt -> for_stmt .)
    PLUS            reduce using rule 58 (stmt -> for_stmt .)
    CONST           reduce using rule 58 (stmt -> for_stmt .)
    CBCLOSED        reduce using rule 58 (stmt -> for_stmt .)
    DEFAULT         reduce using rule 58 (stmt -> for_stmt .)
    CASE            reduce using rule 58 (stmt -> for_stmt .)
    ELSE            reduce using rule 58 (stmt -> for_stmt .)


state 70

    (59) stmt -> switch_stmt .

    BREAK           reduce using rule 59 (stmt -> switch_stmt .)
    SEMICOLON       reduce using rule 59 (stmt -> switch_stmt .)
    ID              reduce using rule 59 (stmt -> switch_stmt .)
    IF              reduce using rule 59 (stmt -> switch_stmt .)
    WHILE           reduce using rule 59 (stmt -> switch_stmt .)
    CBOPEN          reduce using rule 59 (stmt -> switch_stmt .)
    RETURN          reduce using rule 59 (stmt -> switch_stmt .)
    FOR             reduce using rule 59 (stmt -> switch_stmt .)
    SWITCH          reduce using rule 59 (stmt -> switch_stmt .)
    INCR            reduce using rule 59 (stmt -> switch_stmt .)
    DECR            reduce using rule 59 (stmt -> switch_stmt .)
    RBOPEN          reduce using rule 59 (stmt -> switch_stmt .)
    MINUS           reduce using rule 59 (stmt -> switch_stmt .)
    PLUS            reduce using rule 59 (stmt -> switch_stmt .)
    CONST           reduce using rule 59 (stmt -> switch_stmt .)
    CBCLOSED        reduce using rule 59 (stmt -> switch_stmt .)
    DEFAULT         reduce using rule 59 (stmt -> switch_stmt .)
    CASE            reduce using rule 59 (stmt -> switch_stmt .)
    ELSE            reduce using rule 59 (stmt -> switch_stmt .)


state 71

    (61) assign_stmt -> ID . EQUALS expr
    (62) assign_stmt -> ID . ASSOP expr
    (64) term -> ID .
    (66) term -> ID . RBOPEN arg_list RBCLOSED
    (67) term -> ID . SBOPEN CONST SBCLOSED
    (68) term -> ID . SBOPEN ID SBCLOSED

    EQUALS          shift and go to state 105
    ASSOP           shift and go to state 106
    PLUS            reduce using rule 64 (term -> ID .)
    MINUS           reduce using rule 64 (term -> ID .)
    DIVIDE          reduce using rule 64 (term -> ID .)
    TIMES           reduce using rule 64 (term -> ID .)
    MOD             reduce using rule 64 (term -> ID .)
    INCR            reduce using rule 64 (term -> ID .)
    DECR            reduce using rule 64 (term -> ID .)
    SEMICOLON       reduce using rule 64 (term -> ID .)
    COMMA           reduce using rule 64 (term -> ID .)
    RBCLOSED        reduce using rule 64 (term -> ID .)
    RBOPEN          shift and go to state 107
    SBOPEN          shift and go to state 108


state 72

    (63) assign_stmt -> expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    SEMICOLON       reduce using rule 63 (assign_stmt -> expr .)
    COMMA           reduce using rule 63 (assign_stmt -> expr .)
    RBCLOSED        reduce using rule 63 (assign_stmt -> expr .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 73

    (88) if_stmt -> IF . RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> IF . RBOPEN cond RBCLOSED stmt ELSE stmt

    RBOPEN          shift and go to state 116


state 74

    (84) expr -> RBOPEN . expr RBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 117
    term                           shift and go to state 84

state 75

    (95) while_stmt -> WHILE . RBOPEN cond RBCLOSED stmt

    RBOPEN          shift and go to state 119


state 76

    (51) block -> CBOPEN . stmt_list CBCLOSED
    (47) stmt_list -> . stmts
    (48) stmt_list -> . empty
    (49) stmts -> . stmts stmt
    (50) stmts -> . stmt
    (107) empty -> .
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    CBCLOSED        reduce using rule 107 (empty -> .)
    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt_list                      shift and go to state 120
    stmts                          shift and go to state 59
    empty                          shift and go to state 60
    stmt                           shift and go to state 62
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 77

    (99) return_stmt -> RETURN . expr
    (100) return_stmt -> RETURN .
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    SEMICOLON       reduce using rule 100 (return_stmt -> RETURN .)
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 121
    term                           shift and go to state 84

state 78

    (96) for_stmt -> FOR . RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt

    RBOPEN          shift and go to state 122


state 79

    (101) switch_stmt -> SWITCH . RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> SWITCH . RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED

    RBOPEN          shift and go to state 123


state 80

    (86) expr -> PLUS . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 124
    term                           shift and go to state 84

state 81

    (85) expr -> MINUS . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 125
    term                           shift and go to state 84

state 82

    (81) expr -> INCR . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 126
    term                           shift and go to state 84

state 83

    (83) expr -> DECR . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 127
    term                           shift and go to state 84

state 84

    (87) expr -> term .

    PLUS            reduce using rule 87 (expr -> term .)
    MINUS           reduce using rule 87 (expr -> term .)
    DIVIDE          reduce using rule 87 (expr -> term .)
    TIMES           reduce using rule 87 (expr -> term .)
    MOD             reduce using rule 87 (expr -> term .)
    INCR            reduce using rule 87 (expr -> term .)
    DECR            reduce using rule 87 (expr -> term .)
    SEMICOLON       reduce using rule 87 (expr -> term .)
    RBCLOSED        reduce using rule 87 (expr -> term .)
    COMMA           reduce using rule 87 (expr -> term .)
    RELOP           reduce using rule 87 (expr -> term .)
    LOGOP           reduce using rule 87 (expr -> term .)


state 85

    (65) term -> CONST .

    PLUS            reduce using rule 65 (term -> CONST .)
    MINUS           reduce using rule 65 (term -> CONST .)
    DIVIDE          reduce using rule 65 (term -> CONST .)
    TIMES           reduce using rule 65 (term -> CONST .)
    MOD             reduce using rule 65 (term -> CONST .)
    INCR            reduce using rule 65 (term -> CONST .)
    DECR            reduce using rule 65 (term -> CONST .)
    SEMICOLON       reduce using rule 65 (term -> CONST .)
    RBCLOSED        reduce using rule 65 (term -> CONST .)
    COMMA           reduce using rule 65 (term -> CONST .)
    RELOP           reduce using rule 65 (term -> CONST .)
    LOGOP           reduce using rule 65 (term -> CONST .)


state 86

    (28) ident -> pointer .
    (29) ident -> pointer . SBOPEN CONST SBCLOSED
    (30) ident -> pointer . EQUALS CONST
    (31) ident -> pointer . EQUALS MINUS CONST
    (32) ident -> pointer . SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> pointer . SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED

    SEMICOLON       reduce using rule 28 (ident -> pointer .)
    COMMA           reduce using rule 28 (ident -> pointer .)
    SBOPEN          shift and go to state 47
    EQUALS          shift and go to state 48


state 87

    (25) decl -> STORAGE_SPEC type . id_list SEMICOLON
    (26) id_list -> . id_list COMMA ident
    (27) id_list -> . ident
    (28) ident -> . pointer
    (29) ident -> . pointer SBOPEN CONST SBCLOSED
    (30) ident -> . pointer EQUALS CONST
    (31) ident -> . pointer EQUALS MINUS CONST
    (32) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> . pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    id_list                        shift and go to state 50
    ident                          shift and go to state 27
    pointer                        shift and go to state 86

state 88

    (26) id_list -> id_list COMMA ident .

    SEMICOLON       reduce using rule 26 (id_list -> id_list COMMA ident .)
    COMMA           reduce using rule 26 (id_list -> id_list COMMA ident .)


state 89

    (20) parameter -> type . pointer
    (21) parameter -> type . pointer SBOPEN SBCLOSED
    (34) pointer -> . TIMES pointer
    (35) pointer -> . ID

    TIMES           shift and go to state 28
    ID              shift and go to state 29

    pointer                        shift and go to state 128

state 90

    (9) function_decl -> type pointer RBOPEN parameter_list . RBCLOSED
    (17) parameter_list -> parameter_list . COMMA parameter

    RBCLOSED        shift and go to state 129
    COMMA           shift and go to state 130


state 91

    (18) parameter_list -> parameter .

    RBCLOSED        reduce using rule 18 (parameter_list -> parameter .)
    COMMA           reduce using rule 18 (parameter_list -> parameter .)


state 92

    (19) parameter_list -> void .

    RBCLOSED        reduce using rule 19 (parameter_list -> void .)
    COMMA           reduce using rule 19 (parameter_list -> void .)


state 93

    (29) ident -> pointer SBOPEN CONST . SBCLOSED

    SBCLOSED        shift and go to state 131


state 94

    (32) ident -> pointer SBOPEN SBCLOSED . EQUALS CBOPEN const_list CBCLOSED
    (33) ident -> pointer SBOPEN SBCLOSED . EQUALS CBOPEN string_const_list CBCLOSED

    EQUALS          shift and go to state 132


state 95

    (30) ident -> pointer EQUALS CONST .

    SEMICOLON       reduce using rule 30 (ident -> pointer EQUALS CONST .)
    COMMA           reduce using rule 30 (ident -> pointer EQUALS CONST .)


state 96

    (31) ident -> pointer EQUALS MINUS . CONST

    CONST           shift and go to state 133


state 97

    (25) decl -> STORAGE_SPEC type id_list SEMICOLON .

    STORAGE_SPEC    reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    SIGN_MODIFIER   reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    LENG_MODIFIER   reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    TYPE            reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    VOID            reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    ID              reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    BREAK           reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    SEMICOLON       reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    IF              reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    WHILE           reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    CBOPEN          reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    RETURN          reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    FOR             reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    SWITCH          reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    INCR            reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    DECR            reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    RBOPEN          reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    MINUS           reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    PLUS            reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    CONST           reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)
    CBCLOSED        reduce using rule 25 (decl -> STORAGE_SPEC type id_list SEMICOLON .)


state 98

    (11) function_decl -> STORAGE_SPEC type pointer RBOPEN . parameter_list RBCLOSED
    (17) parameter_list -> . parameter_list COMMA parameter
    (18) parameter_list -> . parameter
    (19) parameter_list -> . void
    (20) parameter -> . type pointer
    (21) parameter -> . type pointer SBOPEN SBCLOSED
    (40) void -> . VOID
    (41) void -> . empty
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (107) empty -> .

    VOID            shift and go to state 15
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    RBCLOSED        reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    type                           shift and go to state 89
    parameter_list                 shift and go to state 134
    parameter                      shift and go to state 91
    void                           shift and go to state 92
    empty                          shift and go to state 16

state 99

    (12) function_decl -> STORAGE_SPEC void ID RBOPEN . parameter_list RBCLOSED
    (17) parameter_list -> . parameter_list COMMA parameter
    (18) parameter_list -> . parameter
    (19) parameter_list -> . void
    (20) parameter -> . type pointer
    (21) parameter -> . type pointer SBOPEN SBCLOSED
    (40) void -> . VOID
    (41) void -> . empty
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE
    (107) empty -> .

    VOID            shift and go to state 15
    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13
    RBCLOSED        reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    void                           shift and go to state 92
    parameter_list                 shift and go to state 135
    parameter                      shift and go to state 91
    type                           shift and go to state 89
    empty                          shift and go to state 16

state 100

    (10) function_decl -> void ID RBOPEN parameter_list . RBCLOSED
    (17) parameter_list -> parameter_list . COMMA parameter

    RBCLOSED        shift and go to state 136
    COMMA           shift and go to state 130


state 101

    (49) stmts -> stmts stmt .

    BREAK           reduce using rule 49 (stmts -> stmts stmt .)
    SEMICOLON       reduce using rule 49 (stmts -> stmts stmt .)
    ID              reduce using rule 49 (stmts -> stmts stmt .)
    IF              reduce using rule 49 (stmts -> stmts stmt .)
    WHILE           reduce using rule 49 (stmts -> stmts stmt .)
    CBOPEN          reduce using rule 49 (stmts -> stmts stmt .)
    RETURN          reduce using rule 49 (stmts -> stmts stmt .)
    FOR             reduce using rule 49 (stmts -> stmts stmt .)
    SWITCH          reduce using rule 49 (stmts -> stmts stmt .)
    INCR            reduce using rule 49 (stmts -> stmts stmt .)
    DECR            reduce using rule 49 (stmts -> stmts stmt .)
    RBOPEN          reduce using rule 49 (stmts -> stmts stmt .)
    MINUS           reduce using rule 49 (stmts -> stmts stmt .)
    PLUS            reduce using rule 49 (stmts -> stmts stmt .)
    CONST           reduce using rule 49 (stmts -> stmts stmt .)
    CBCLOSED        reduce using rule 49 (stmts -> stmts stmt .)
    DEFAULT         reduce using rule 49 (stmts -> stmts stmt .)
    CASE            reduce using rule 49 (stmts -> stmts stmt .)


state 102

    (52) stmt -> assign_stmt SEMICOLON .

    BREAK           reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    SEMICOLON       reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    ID              reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    IF              reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    WHILE           reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    CBOPEN          reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    RETURN          reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    FOR             reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    SWITCH          reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    INCR            reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    DECR            reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    RBOPEN          reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    MINUS           reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    PLUS            reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    CONST           reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    CBCLOSED        reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    DEFAULT         reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    CASE            reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)
    ELSE            reduce using rule 52 (stmt -> assign_stmt SEMICOLON .)


state 103

    (56) stmt -> BREAK SEMICOLON .

    BREAK           reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    ID              reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    IF              reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    WHILE           reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    CBOPEN          reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    RETURN          reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    FOR             reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    SWITCH          reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    INCR            reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    DECR            reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    RBOPEN          reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    MINUS           reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    PLUS            reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    CONST           reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    CBCLOSED        reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    DEFAULT         reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    CASE            reduce using rule 56 (stmt -> BREAK SEMICOLON .)
    ELSE            reduce using rule 56 (stmt -> BREAK SEMICOLON .)


state 104

    (57) stmt -> return_stmt SEMICOLON .

    BREAK           reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    SEMICOLON       reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    ID              reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    IF              reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    WHILE           reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    CBOPEN          reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    RETURN          reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    FOR             reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    SWITCH          reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    INCR            reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    DECR            reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    RBOPEN          reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    MINUS           reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    PLUS            reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    CONST           reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    CBCLOSED        reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    DEFAULT         reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    CASE            reduce using rule 57 (stmt -> return_stmt SEMICOLON .)
    ELSE            reduce using rule 57 (stmt -> return_stmt SEMICOLON .)


state 105

    (61) assign_stmt -> ID EQUALS . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 137
    term                           shift and go to state 84

state 106

    (62) assign_stmt -> ID ASSOP . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 138
    term                           shift and go to state 84

state 107

    (66) term -> ID RBOPEN . arg_list RBCLOSED
    (69) arg_list -> . args
    (70) arg_list -> . empty
    (71) args -> . args COMMA arg
    (72) args -> . arg
    (107) empty -> .
    (73) arg -> . term
    (74) arg -> . STRINGCONST
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    RBCLOSED        reduce using rule 107 (empty -> .)
    STRINGCONST     shift and go to state 144
    ID              shift and go to state 118
    CONST           shift and go to state 85

    arg_list                       shift and go to state 139
    args                           shift and go to state 140
    empty                          shift and go to state 141
    arg                            shift and go to state 142
    term                           shift and go to state 143

state 108

    (67) term -> ID SBOPEN . CONST SBCLOSED
    (68) term -> ID SBOPEN . ID SBCLOSED

    CONST           shift and go to state 146
    ID              shift and go to state 145


state 109

    (75) expr -> expr PLUS . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 147
    term                           shift and go to state 84

state 110

    (76) expr -> expr MINUS . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 148
    term                           shift and go to state 84

state 111

    (77) expr -> expr DIVIDE . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 149
    term                           shift and go to state 84

state 112

    (78) expr -> expr TIMES . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 150
    term                           shift and go to state 84

state 113

    (79) expr -> expr MOD . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 151
    term                           shift and go to state 84

state 114

    (80) expr -> expr INCR .

    PLUS            reduce using rule 80 (expr -> expr INCR .)
    MINUS           reduce using rule 80 (expr -> expr INCR .)
    DIVIDE          reduce using rule 80 (expr -> expr INCR .)
    TIMES           reduce using rule 80 (expr -> expr INCR .)
    MOD             reduce using rule 80 (expr -> expr INCR .)
    INCR            reduce using rule 80 (expr -> expr INCR .)
    DECR            reduce using rule 80 (expr -> expr INCR .)
    SEMICOLON       reduce using rule 80 (expr -> expr INCR .)
    RBCLOSED        reduce using rule 80 (expr -> expr INCR .)
    COMMA           reduce using rule 80 (expr -> expr INCR .)
    RELOP           reduce using rule 80 (expr -> expr INCR .)
    LOGOP           reduce using rule 80 (expr -> expr INCR .)


state 115

    (82) expr -> expr DECR .

    PLUS            reduce using rule 82 (expr -> expr DECR .)
    MINUS           reduce using rule 82 (expr -> expr DECR .)
    DIVIDE          reduce using rule 82 (expr -> expr DECR .)
    TIMES           reduce using rule 82 (expr -> expr DECR .)
    MOD             reduce using rule 82 (expr -> expr DECR .)
    INCR            reduce using rule 82 (expr -> expr DECR .)
    DECR            reduce using rule 82 (expr -> expr DECR .)
    SEMICOLON       reduce using rule 82 (expr -> expr DECR .)
    RBCLOSED        reduce using rule 82 (expr -> expr DECR .)
    COMMA           reduce using rule 82 (expr -> expr DECR .)
    RELOP           reduce using rule 82 (expr -> expr DECR .)
    LOGOP           reduce using rule 82 (expr -> expr DECR .)


state 116

    (88) if_stmt -> IF RBOPEN . cond RBCLOSED stmt
    (89) if_stmt -> IF RBOPEN . cond RBCLOSED stmt ELSE stmt
    (90) cond -> . cond LOGOP cond
    (91) cond -> . RBOPEN cond RBCLOSED
    (92) cond -> . comparison
    (93) cond -> . expr
    (94) comparison -> . expr RELOP expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    RBOPEN          shift and go to state 152
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    cond                           shift and go to state 153
    comparison                     shift and go to state 154
    expr                           shift and go to state 155
    term                           shift and go to state 84

state 117

    (84) expr -> RBOPEN expr . RBCLOSED
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    RBCLOSED        shift and go to state 156
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 118

    (64) term -> ID .
    (66) term -> ID . RBOPEN arg_list RBCLOSED
    (67) term -> ID . SBOPEN CONST SBCLOSED
    (68) term -> ID . SBOPEN ID SBCLOSED

    RBCLOSED        reduce using rule 64 (term -> ID .)
    PLUS            reduce using rule 64 (term -> ID .)
    MINUS           reduce using rule 64 (term -> ID .)
    DIVIDE          reduce using rule 64 (term -> ID .)
    TIMES           reduce using rule 64 (term -> ID .)
    MOD             reduce using rule 64 (term -> ID .)
    INCR            reduce using rule 64 (term -> ID .)
    DECR            reduce using rule 64 (term -> ID .)
    SEMICOLON       reduce using rule 64 (term -> ID .)
    COMMA           reduce using rule 64 (term -> ID .)
    RELOP           reduce using rule 64 (term -> ID .)
    LOGOP           reduce using rule 64 (term -> ID .)
    RBOPEN          shift and go to state 107
    SBOPEN          shift and go to state 108


state 119

    (95) while_stmt -> WHILE RBOPEN . cond RBCLOSED stmt
    (90) cond -> . cond LOGOP cond
    (91) cond -> . RBOPEN cond RBCLOSED
    (92) cond -> . comparison
    (93) cond -> . expr
    (94) comparison -> . expr RELOP expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    RBOPEN          shift and go to state 152
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    cond                           shift and go to state 157
    comparison                     shift and go to state 154
    expr                           shift and go to state 155
    term                           shift and go to state 84

state 120

    (51) block -> CBOPEN stmt_list . CBCLOSED

    CBCLOSED        shift and go to state 158


state 121

    (99) return_stmt -> RETURN expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    SEMICOLON       reduce using rule 99 (return_stmt -> RETURN expr .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 122

    (96) for_stmt -> FOR RBOPEN . expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (97) expr_list -> . expr_list COMMA assign_stmt
    (98) expr_list -> . assign_stmt
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    ID              shift and go to state 71
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    expr_list                      shift and go to state 159
    assign_stmt                    shift and go to state 160
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 123

    (101) switch_stmt -> SWITCH RBOPEN . ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> SWITCH RBOPEN . ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED

    ID              shift and go to state 161


state 124

    (86) expr -> PLUS expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 86 (expr -> PLUS expr .)
    MINUS           reduce using rule 86 (expr -> PLUS expr .)
    SEMICOLON       reduce using rule 86 (expr -> PLUS expr .)
    RBCLOSED        reduce using rule 86 (expr -> PLUS expr .)
    COMMA           reduce using rule 86 (expr -> PLUS expr .)
    RELOP           reduce using rule 86 (expr -> PLUS expr .)
    LOGOP           reduce using rule 86 (expr -> PLUS expr .)
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! DIVIDE          [ reduce using rule 86 (expr -> PLUS expr .) ]
  ! TIMES           [ reduce using rule 86 (expr -> PLUS expr .) ]
  ! MOD             [ reduce using rule 86 (expr -> PLUS expr .) ]
  ! INCR            [ reduce using rule 86 (expr -> PLUS expr .) ]
  ! DECR            [ reduce using rule 86 (expr -> PLUS expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]


state 125

    (85) expr -> MINUS expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 85 (expr -> MINUS expr .)
    MINUS           reduce using rule 85 (expr -> MINUS expr .)
    SEMICOLON       reduce using rule 85 (expr -> MINUS expr .)
    RBCLOSED        reduce using rule 85 (expr -> MINUS expr .)
    COMMA           reduce using rule 85 (expr -> MINUS expr .)
    RELOP           reduce using rule 85 (expr -> MINUS expr .)
    LOGOP           reduce using rule 85 (expr -> MINUS expr .)
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! DIVIDE          [ reduce using rule 85 (expr -> MINUS expr .) ]
  ! TIMES           [ reduce using rule 85 (expr -> MINUS expr .) ]
  ! MOD             [ reduce using rule 85 (expr -> MINUS expr .) ]
  ! INCR            [ reduce using rule 85 (expr -> MINUS expr .) ]
  ! DECR            [ reduce using rule 85 (expr -> MINUS expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]


state 126

    (81) expr -> INCR expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 81 (expr -> INCR expr .)
    MINUS           reduce using rule 81 (expr -> INCR expr .)
    DIVIDE          reduce using rule 81 (expr -> INCR expr .)
    TIMES           reduce using rule 81 (expr -> INCR expr .)
    MOD             reduce using rule 81 (expr -> INCR expr .)
    INCR            reduce using rule 81 (expr -> INCR expr .)
    DECR            reduce using rule 81 (expr -> INCR expr .)
    SEMICOLON       reduce using rule 81 (expr -> INCR expr .)
    RBCLOSED        reduce using rule 81 (expr -> INCR expr .)
    COMMA           reduce using rule 81 (expr -> INCR expr .)
    RELOP           reduce using rule 81 (expr -> INCR expr .)
    LOGOP           reduce using rule 81 (expr -> INCR expr .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]
  ! DIVIDE          [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 112 ]
  ! MOD             [ shift and go to state 113 ]
  ! INCR            [ shift and go to state 114 ]
  ! DECR            [ shift and go to state 115 ]


state 127

    (83) expr -> DECR expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 83 (expr -> DECR expr .)
    MINUS           reduce using rule 83 (expr -> DECR expr .)
    DIVIDE          reduce using rule 83 (expr -> DECR expr .)
    TIMES           reduce using rule 83 (expr -> DECR expr .)
    MOD             reduce using rule 83 (expr -> DECR expr .)
    INCR            reduce using rule 83 (expr -> DECR expr .)
    DECR            reduce using rule 83 (expr -> DECR expr .)
    SEMICOLON       reduce using rule 83 (expr -> DECR expr .)
    RBCLOSED        reduce using rule 83 (expr -> DECR expr .)
    COMMA           reduce using rule 83 (expr -> DECR expr .)
    RELOP           reduce using rule 83 (expr -> DECR expr .)
    LOGOP           reduce using rule 83 (expr -> DECR expr .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]
  ! DIVIDE          [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 112 ]
  ! MOD             [ shift and go to state 113 ]
  ! INCR            [ shift and go to state 114 ]
  ! DECR            [ shift and go to state 115 ]


state 128

    (20) parameter -> type pointer .
    (21) parameter -> type pointer . SBOPEN SBCLOSED

    RBCLOSED        reduce using rule 20 (parameter -> type pointer .)
    COMMA           reduce using rule 20 (parameter -> type pointer .)
    SBOPEN          shift and go to state 162


state 129

    (9) function_decl -> type pointer RBOPEN parameter_list RBCLOSED .

    CBOPEN          reduce using rule 9 (function_decl -> type pointer RBOPEN parameter_list RBCLOSED .)
    SEMICOLON       reduce using rule 9 (function_decl -> type pointer RBOPEN parameter_list RBCLOSED .)


state 130

    (17) parameter_list -> parameter_list COMMA . parameter
    (20) parameter -> . type pointer
    (21) parameter -> . type pointer SBOPEN SBCLOSED
    (42) type -> . SIGN_MODIFIER TYPE
    (43) type -> . LENG_MODIFIER TYPE
    (44) type -> . SIGN_MODIFIER LENG_MODIFIER TYPE
    (45) type -> . LENG_MODIFIER
    (46) type -> . TYPE

    SIGN_MODIFIER   shift and go to state 12
    LENG_MODIFIER   shift and go to state 14
    TYPE            shift and go to state 13

    parameter                      shift and go to state 163
    type                           shift and go to state 89

state 131

    (29) ident -> pointer SBOPEN CONST SBCLOSED .

    SEMICOLON       reduce using rule 29 (ident -> pointer SBOPEN CONST SBCLOSED .)
    COMMA           reduce using rule 29 (ident -> pointer SBOPEN CONST SBCLOSED .)


state 132

    (32) ident -> pointer SBOPEN SBCLOSED EQUALS . CBOPEN const_list CBCLOSED
    (33) ident -> pointer SBOPEN SBCLOSED EQUALS . CBOPEN string_const_list CBCLOSED

    CBOPEN          shift and go to state 164


state 133

    (31) ident -> pointer EQUALS MINUS CONST .

    SEMICOLON       reduce using rule 31 (ident -> pointer EQUALS MINUS CONST .)
    COMMA           reduce using rule 31 (ident -> pointer EQUALS MINUS CONST .)


state 134

    (11) function_decl -> STORAGE_SPEC type pointer RBOPEN parameter_list . RBCLOSED
    (17) parameter_list -> parameter_list . COMMA parameter

    RBCLOSED        shift and go to state 165
    COMMA           shift and go to state 130


state 135

    (12) function_decl -> STORAGE_SPEC void ID RBOPEN parameter_list . RBCLOSED
    (17) parameter_list -> parameter_list . COMMA parameter

    RBCLOSED        shift and go to state 166
    COMMA           shift and go to state 130


state 136

    (10) function_decl -> void ID RBOPEN parameter_list RBCLOSED .

    CBOPEN          reduce using rule 10 (function_decl -> void ID RBOPEN parameter_list RBCLOSED .)
    SEMICOLON       reduce using rule 10 (function_decl -> void ID RBOPEN parameter_list RBCLOSED .)


state 137

    (61) assign_stmt -> ID EQUALS expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    SEMICOLON       reduce using rule 61 (assign_stmt -> ID EQUALS expr .)
    COMMA           reduce using rule 61 (assign_stmt -> ID EQUALS expr .)
    RBCLOSED        reduce using rule 61 (assign_stmt -> ID EQUALS expr .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 138

    (62) assign_stmt -> ID ASSOP expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    SEMICOLON       reduce using rule 62 (assign_stmt -> ID ASSOP expr .)
    COMMA           reduce using rule 62 (assign_stmt -> ID ASSOP expr .)
    RBCLOSED        reduce using rule 62 (assign_stmt -> ID ASSOP expr .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 139

    (66) term -> ID RBOPEN arg_list . RBCLOSED

    RBCLOSED        shift and go to state 167


state 140

    (69) arg_list -> args .
    (71) args -> args . COMMA arg

    RBCLOSED        reduce using rule 69 (arg_list -> args .)
    COMMA           shift and go to state 168


state 141

    (70) arg_list -> empty .

    RBCLOSED        reduce using rule 70 (arg_list -> empty .)


state 142

    (72) args -> arg .

    COMMA           reduce using rule 72 (args -> arg .)
    RBCLOSED        reduce using rule 72 (args -> arg .)


state 143

    (73) arg -> term .

    COMMA           reduce using rule 73 (arg -> term .)
    RBCLOSED        reduce using rule 73 (arg -> term .)


state 144

    (74) arg -> STRINGCONST .

    COMMA           reduce using rule 74 (arg -> STRINGCONST .)
    RBCLOSED        reduce using rule 74 (arg -> STRINGCONST .)


state 145

    (68) term -> ID SBOPEN ID . SBCLOSED

    SBCLOSED        shift and go to state 169


state 146

    (67) term -> ID SBOPEN CONST . SBCLOSED

    SBCLOSED        shift and go to state 170


state 147

    (75) expr -> expr PLUS expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 75 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 75 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 75 (expr -> expr PLUS expr .)
    RBCLOSED        reduce using rule 75 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 75 (expr -> expr PLUS expr .)
    RELOP           reduce using rule 75 (expr -> expr PLUS expr .)
    LOGOP           reduce using rule 75 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! DIVIDE          [ reduce using rule 75 (expr -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 75 (expr -> expr PLUS expr .) ]
  ! MOD             [ reduce using rule 75 (expr -> expr PLUS expr .) ]
  ! INCR            [ reduce using rule 75 (expr -> expr PLUS expr .) ]
  ! DECR            [ reduce using rule 75 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]


state 148

    (76) expr -> expr MINUS expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 76 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 76 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 76 (expr -> expr MINUS expr .)
    RBCLOSED        reduce using rule 76 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 76 (expr -> expr MINUS expr .)
    RELOP           reduce using rule 76 (expr -> expr MINUS expr .)
    LOGOP           reduce using rule 76 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! DIVIDE          [ reduce using rule 76 (expr -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 76 (expr -> expr MINUS expr .) ]
  ! MOD             [ reduce using rule 76 (expr -> expr MINUS expr .) ]
  ! INCR            [ reduce using rule 76 (expr -> expr MINUS expr .) ]
  ! DECR            [ reduce using rule 76 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]


state 149

    (77) expr -> expr DIVIDE expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 77 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 77 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 77 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 77 (expr -> expr DIVIDE expr .)
    MOD             reduce using rule 77 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 77 (expr -> expr DIVIDE expr .)
    RBCLOSED        reduce using rule 77 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 77 (expr -> expr DIVIDE expr .)
    RELOP           reduce using rule 77 (expr -> expr DIVIDE expr .)
    LOGOP           reduce using rule 77 (expr -> expr DIVIDE expr .)
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! INCR            [ reduce using rule 77 (expr -> expr DIVIDE expr .) ]
  ! DECR            [ reduce using rule 77 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]
  ! DIVIDE          [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 112 ]
  ! MOD             [ shift and go to state 113 ]


state 150

    (78) expr -> expr TIMES expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 78 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 78 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 78 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 78 (expr -> expr TIMES expr .)
    MOD             reduce using rule 78 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 78 (expr -> expr TIMES expr .)
    RBCLOSED        reduce using rule 78 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 78 (expr -> expr TIMES expr .)
    RELOP           reduce using rule 78 (expr -> expr TIMES expr .)
    LOGOP           reduce using rule 78 (expr -> expr TIMES expr .)
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! INCR            [ reduce using rule 78 (expr -> expr TIMES expr .) ]
  ! DECR            [ reduce using rule 78 (expr -> expr TIMES expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]
  ! DIVIDE          [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 112 ]
  ! MOD             [ shift and go to state 113 ]


state 151

    (79) expr -> expr MOD expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    PLUS            reduce using rule 79 (expr -> expr MOD expr .)
    MINUS           reduce using rule 79 (expr -> expr MOD expr .)
    DIVIDE          reduce using rule 79 (expr -> expr MOD expr .)
    TIMES           reduce using rule 79 (expr -> expr MOD expr .)
    MOD             reduce using rule 79 (expr -> expr MOD expr .)
    SEMICOLON       reduce using rule 79 (expr -> expr MOD expr .)
    RBCLOSED        reduce using rule 79 (expr -> expr MOD expr .)
    COMMA           reduce using rule 79 (expr -> expr MOD expr .)
    RELOP           reduce using rule 79 (expr -> expr MOD expr .)
    LOGOP           reduce using rule 79 (expr -> expr MOD expr .)
    INCR            shift and go to state 114
    DECR            shift and go to state 115

  ! INCR            [ reduce using rule 79 (expr -> expr MOD expr .) ]
  ! DECR            [ reduce using rule 79 (expr -> expr MOD expr .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 110 ]
  ! DIVIDE          [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 112 ]
  ! MOD             [ shift and go to state 113 ]


state 152

    (91) cond -> RBOPEN . cond RBCLOSED
    (84) expr -> RBOPEN . expr RBCLOSED
    (90) cond -> . cond LOGOP cond
    (91) cond -> . RBOPEN cond RBCLOSED
    (92) cond -> . comparison
    (93) cond -> . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (94) comparison -> . expr RELOP expr
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    RBOPEN          shift and go to state 152
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    cond                           shift and go to state 171
    expr                           shift and go to state 172
    comparison                     shift and go to state 154
    term                           shift and go to state 84

state 153

    (88) if_stmt -> IF RBOPEN cond . RBCLOSED stmt
    (89) if_stmt -> IF RBOPEN cond . RBCLOSED stmt ELSE stmt
    (90) cond -> cond . LOGOP cond

    RBCLOSED        shift and go to state 173
    LOGOP           shift and go to state 174


state 154

    (92) cond -> comparison .

    RBCLOSED        reduce using rule 92 (cond -> comparison .)
    LOGOP           reduce using rule 92 (cond -> comparison .)
    SEMICOLON       reduce using rule 92 (cond -> comparison .)


state 155

    (93) cond -> expr .
    (94) comparison -> expr . RELOP expr
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    RBCLOSED        reduce using rule 93 (cond -> expr .)
    LOGOP           reduce using rule 93 (cond -> expr .)
    SEMICOLON       reduce using rule 93 (cond -> expr .)
    RELOP           shift and go to state 175
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 156

    (84) expr -> RBOPEN expr RBCLOSED .

    PLUS            reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    MINUS           reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    DIVIDE          reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    TIMES           reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    MOD             reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    INCR            reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    DECR            reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    SEMICOLON       reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    RBCLOSED        reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    COMMA           reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    RELOP           reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)
    LOGOP           reduce using rule 84 (expr -> RBOPEN expr RBCLOSED .)


state 157

    (95) while_stmt -> WHILE RBOPEN cond . RBCLOSED stmt
    (90) cond -> cond . LOGOP cond

    RBCLOSED        shift and go to state 176
    LOGOP           shift and go to state 174


state 158

    (51) block -> CBOPEN stmt_list CBCLOSED .

    BREAK           reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    SEMICOLON       reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    ID              reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    IF              reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    WHILE           reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    CBOPEN          reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    RETURN          reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    FOR             reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    SWITCH          reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    INCR            reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    DECR            reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    RBOPEN          reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    MINUS           reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    PLUS            reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    CONST           reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    CBCLOSED        reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    DEFAULT         reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    CASE            reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)
    ELSE            reduce using rule 51 (block -> CBOPEN stmt_list CBCLOSED .)


state 159

    (96) for_stmt -> FOR RBOPEN expr_list . SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (97) expr_list -> expr_list . COMMA assign_stmt

    SEMICOLON       shift and go to state 177
    COMMA           shift and go to state 178


state 160

    (98) expr_list -> assign_stmt .

    SEMICOLON       reduce using rule 98 (expr_list -> assign_stmt .)
    COMMA           reduce using rule 98 (expr_list -> assign_stmt .)
    RBCLOSED        reduce using rule 98 (expr_list -> assign_stmt .)


state 161

    (101) switch_stmt -> SWITCH RBOPEN ID . RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> SWITCH RBOPEN ID . RBCLOSED CBOPEN case_list default_stmt CBCLOSED

    RBCLOSED        shift and go to state 179


state 162

    (21) parameter -> type pointer SBOPEN . SBCLOSED

    SBCLOSED        shift and go to state 180


state 163

    (17) parameter_list -> parameter_list COMMA parameter .

    RBCLOSED        reduce using rule 17 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 17 (parameter_list -> parameter_list COMMA parameter .)


state 164

    (32) ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN . const_list CBCLOSED
    (33) ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN . string_const_list CBCLOSED
    (36) const_list -> . const_list COMMA CONST
    (37) const_list -> . CONST
    (38) string_const_list -> . string_const_list COMMA STRINGCONST
    (39) string_const_list -> . STRINGCONST

    CONST           shift and go to state 183
    STRINGCONST     shift and go to state 184

    const_list                     shift and go to state 181
    string_const_list              shift and go to state 182

state 165

    (11) function_decl -> STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED .

    CBOPEN          reduce using rule 11 (function_decl -> STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED .)
    SEMICOLON       reduce using rule 11 (function_decl -> STORAGE_SPEC type pointer RBOPEN parameter_list RBCLOSED .)


state 166

    (12) function_decl -> STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED .

    CBOPEN          reduce using rule 12 (function_decl -> STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED .)
    SEMICOLON       reduce using rule 12 (function_decl -> STORAGE_SPEC void ID RBOPEN parameter_list RBCLOSED .)


state 167

    (66) term -> ID RBOPEN arg_list RBCLOSED .

    PLUS            reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    MINUS           reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    DIVIDE          reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    TIMES           reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    MOD             reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    INCR            reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    DECR            reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    SEMICOLON       reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    RBCLOSED        reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    COMMA           reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    RELOP           reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)
    LOGOP           reduce using rule 66 (term -> ID RBOPEN arg_list RBCLOSED .)


state 168

    (71) args -> args COMMA . arg
    (73) arg -> . term
    (74) arg -> . STRINGCONST
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    STRINGCONST     shift and go to state 144
    ID              shift and go to state 118
    CONST           shift and go to state 85

    arg                            shift and go to state 185
    term                           shift and go to state 143

state 169

    (68) term -> ID SBOPEN ID SBCLOSED .

    PLUS            reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    MINUS           reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    DIVIDE          reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    TIMES           reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    MOD             reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    INCR            reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    DECR            reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    SEMICOLON       reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    RBCLOSED        reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    COMMA           reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    RELOP           reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)
    LOGOP           reduce using rule 68 (term -> ID SBOPEN ID SBCLOSED .)


state 170

    (67) term -> ID SBOPEN CONST SBCLOSED .

    PLUS            reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    MINUS           reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    DIVIDE          reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    TIMES           reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    MOD             reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    INCR            reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    DECR            reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    SEMICOLON       reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    RBCLOSED        reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    COMMA           reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    RELOP           reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)
    LOGOP           reduce using rule 67 (term -> ID SBOPEN CONST SBCLOSED .)


state 171

    (91) cond -> RBOPEN cond . RBCLOSED
    (90) cond -> cond . LOGOP cond

    RBCLOSED        shift and go to state 186
    LOGOP           shift and go to state 174


state 172

    (84) expr -> RBOPEN expr . RBCLOSED
    (93) cond -> expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR
    (94) comparison -> expr . RELOP expr

  ! shift/reduce conflict for RBCLOSED resolved as shift
    RBCLOSED        shift and go to state 156
    LOGOP           reduce using rule 93 (cond -> expr .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115
    RELOP           shift and go to state 175

  ! RBCLOSED        [ reduce using rule 93 (cond -> expr .) ]


state 173

    (88) if_stmt -> IF RBOPEN cond RBCLOSED . stmt
    (89) if_stmt -> IF RBOPEN cond RBCLOSED . stmt ELSE stmt
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt                           shift and go to state 187
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 174

    (90) cond -> cond LOGOP . cond
    (90) cond -> . cond LOGOP cond
    (91) cond -> . RBOPEN cond RBCLOSED
    (92) cond -> . comparison
    (93) cond -> . expr
    (94) comparison -> . expr RELOP expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    RBOPEN          shift and go to state 152
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    cond                           shift and go to state 188
    comparison                     shift and go to state 154
    expr                           shift and go to state 155
    term                           shift and go to state 84

state 175

    (94) comparison -> expr RELOP . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    expr                           shift and go to state 189
    term                           shift and go to state 84

state 176

    (95) while_stmt -> WHILE RBOPEN cond RBCLOSED . stmt
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt                           shift and go to state 190
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 177

    (96) for_stmt -> FOR RBOPEN expr_list SEMICOLON . cond SEMICOLON expr_list RBCLOSED stmt
    (90) cond -> . cond LOGOP cond
    (91) cond -> . RBOPEN cond RBCLOSED
    (92) cond -> . comparison
    (93) cond -> . expr
    (94) comparison -> . expr RELOP expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    RBOPEN          shift and go to state 152
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    ID              shift and go to state 118
    CONST           shift and go to state 85

    cond                           shift and go to state 191
    comparison                     shift and go to state 154
    expr                           shift and go to state 155
    term                           shift and go to state 84

state 178

    (97) expr_list -> expr_list COMMA . assign_stmt
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    ID              shift and go to state 71
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    assign_stmt                    shift and go to state 192
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 179

    (101) switch_stmt -> SWITCH RBOPEN ID RBCLOSED . CBOPEN case_list CBCLOSED
    (102) switch_stmt -> SWITCH RBOPEN ID RBCLOSED . CBOPEN case_list default_stmt CBCLOSED

    CBOPEN          shift and go to state 193


state 180

    (21) parameter -> type pointer SBOPEN SBCLOSED .

    RBCLOSED        reduce using rule 21 (parameter -> type pointer SBOPEN SBCLOSED .)
    COMMA           reduce using rule 21 (parameter -> type pointer SBOPEN SBCLOSED .)


state 181

    (32) ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list . CBCLOSED
    (36) const_list -> const_list . COMMA CONST

    CBCLOSED        shift and go to state 194
    COMMA           shift and go to state 195


state 182

    (33) ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list . CBCLOSED
    (38) string_const_list -> string_const_list . COMMA STRINGCONST

    CBCLOSED        shift and go to state 196
    COMMA           shift and go to state 197


state 183

    (37) const_list -> CONST .

    CBCLOSED        reduce using rule 37 (const_list -> CONST .)
    COMMA           reduce using rule 37 (const_list -> CONST .)


state 184

    (39) string_const_list -> STRINGCONST .

    CBCLOSED        reduce using rule 39 (string_const_list -> STRINGCONST .)
    COMMA           reduce using rule 39 (string_const_list -> STRINGCONST .)


state 185

    (71) args -> args COMMA arg .

    COMMA           reduce using rule 71 (args -> args COMMA arg .)
    RBCLOSED        reduce using rule 71 (args -> args COMMA arg .)


state 186

    (91) cond -> RBOPEN cond RBCLOSED .

    RBCLOSED        reduce using rule 91 (cond -> RBOPEN cond RBCLOSED .)
    LOGOP           reduce using rule 91 (cond -> RBOPEN cond RBCLOSED .)
    SEMICOLON       reduce using rule 91 (cond -> RBOPEN cond RBCLOSED .)


state 187

    (88) if_stmt -> IF RBOPEN cond RBCLOSED stmt .
    (89) if_stmt -> IF RBOPEN cond RBCLOSED stmt . ELSE stmt

    BREAK           reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    SEMICOLON       reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    ID              reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    IF              reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    WHILE           reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    CBOPEN          reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    RETURN          reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    FOR             reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    SWITCH          reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    INCR            reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    DECR            reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    RBOPEN          reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    MINUS           reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    PLUS            reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    CONST           reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    CBCLOSED        reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    DEFAULT         reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    CASE            reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .)
    ELSE            shift and go to state 198

  ! ELSE            [ reduce using rule 88 (if_stmt -> IF RBOPEN cond RBCLOSED stmt .) ]


state 188

    (90) cond -> cond LOGOP cond .
    (90) cond -> cond . LOGOP cond

    RBCLOSED        reduce using rule 90 (cond -> cond LOGOP cond .)
    LOGOP           reduce using rule 90 (cond -> cond LOGOP cond .)
    SEMICOLON       reduce using rule 90 (cond -> cond LOGOP cond .)

  ! LOGOP           [ shift and go to state 174 ]


state 189

    (94) comparison -> expr RELOP expr .
    (75) expr -> expr . PLUS expr
    (76) expr -> expr . MINUS expr
    (77) expr -> expr . DIVIDE expr
    (78) expr -> expr . TIMES expr
    (79) expr -> expr . MOD expr
    (80) expr -> expr . INCR
    (82) expr -> expr . DECR

    RBCLOSED        reduce using rule 94 (comparison -> expr RELOP expr .)
    LOGOP           reduce using rule 94 (comparison -> expr RELOP expr .)
    SEMICOLON       reduce using rule 94 (comparison -> expr RELOP expr .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    DIVIDE          shift and go to state 111
    TIMES           shift and go to state 112
    MOD             shift and go to state 113
    INCR            shift and go to state 114
    DECR            shift and go to state 115


state 190

    (95) while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .

    BREAK           reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    SEMICOLON       reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    ID              reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    IF              reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    WHILE           reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    CBOPEN          reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    RETURN          reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    FOR             reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    SWITCH          reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    INCR            reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    DECR            reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    RBOPEN          reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    MINUS           reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    PLUS            reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    CONST           reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    CBCLOSED        reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    DEFAULT         reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    CASE            reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)
    ELSE            reduce using rule 95 (while_stmt -> WHILE RBOPEN cond RBCLOSED stmt .)


state 191

    (96) for_stmt -> FOR RBOPEN expr_list SEMICOLON cond . SEMICOLON expr_list RBCLOSED stmt
    (90) cond -> cond . LOGOP cond

    SEMICOLON       shift and go to state 199
    LOGOP           shift and go to state 174


state 192

    (97) expr_list -> expr_list COMMA assign_stmt .

    SEMICOLON       reduce using rule 97 (expr_list -> expr_list COMMA assign_stmt .)
    COMMA           reduce using rule 97 (expr_list -> expr_list COMMA assign_stmt .)
    RBCLOSED        reduce using rule 97 (expr_list -> expr_list COMMA assign_stmt .)


state 193

    (101) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN . case_list CBCLOSED
    (102) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN . case_list default_stmt CBCLOSED
    (103) case_list -> . case_list case_stmt
    (104) case_list -> . case_stmt
    (105) case_stmt -> . CASE CONST COLON stmt_list

    CASE            shift and go to state 202

    case_list                      shift and go to state 200
    case_stmt                      shift and go to state 201

state 194

    (32) ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED .

    SEMICOLON       reduce using rule 32 (ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED .)
    COMMA           reduce using rule 32 (ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN const_list CBCLOSED .)


state 195

    (36) const_list -> const_list COMMA . CONST

    CONST           shift and go to state 203


state 196

    (33) ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED .

    SEMICOLON       reduce using rule 33 (ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED .)
    COMMA           reduce using rule 33 (ident -> pointer SBOPEN SBCLOSED EQUALS CBOPEN string_const_list CBCLOSED .)


state 197

    (38) string_const_list -> string_const_list COMMA . STRINGCONST

    STRINGCONST     shift and go to state 204


state 198

    (89) if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE . stmt
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt                           shift and go to state 205
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 199

    (96) for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON . expr_list RBCLOSED stmt
    (97) expr_list -> . expr_list COMMA assign_stmt
    (98) expr_list -> . assign_stmt
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    ID              shift and go to state 71
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    expr_list                      shift and go to state 206
    assign_stmt                    shift and go to state 160
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 200

    (101) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list . CBCLOSED
    (102) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list . default_stmt CBCLOSED
    (103) case_list -> case_list . case_stmt
    (106) default_stmt -> . DEFAULT COLON stmt_list
    (105) case_stmt -> . CASE CONST COLON stmt_list

    CBCLOSED        shift and go to state 207
    DEFAULT         shift and go to state 210
    CASE            shift and go to state 202

    default_stmt                   shift and go to state 208
    case_stmt                      shift and go to state 209

state 201

    (104) case_list -> case_stmt .

    CBCLOSED        reduce using rule 104 (case_list -> case_stmt .)
    DEFAULT         reduce using rule 104 (case_list -> case_stmt .)
    CASE            reduce using rule 104 (case_list -> case_stmt .)


state 202

    (105) case_stmt -> CASE . CONST COLON stmt_list

    CONST           shift and go to state 211


state 203

    (36) const_list -> const_list COMMA CONST .

    CBCLOSED        reduce using rule 36 (const_list -> const_list COMMA CONST .)
    COMMA           reduce using rule 36 (const_list -> const_list COMMA CONST .)


state 204

    (38) string_const_list -> string_const_list COMMA STRINGCONST .

    CBCLOSED        reduce using rule 38 (string_const_list -> string_const_list COMMA STRINGCONST .)
    COMMA           reduce using rule 38 (string_const_list -> string_const_list COMMA STRINGCONST .)


state 205

    (89) if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .

    BREAK           reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    SEMICOLON       reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    ID              reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    IF              reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    WHILE           reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    CBOPEN          reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    RETURN          reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    FOR             reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    SWITCH          reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    INCR            reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    DECR            reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    RBOPEN          reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    MINUS           reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    PLUS            reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    CONST           reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    CBCLOSED        reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    DEFAULT         reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    CASE            reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)
    ELSE            reduce using rule 89 (if_stmt -> IF RBOPEN cond RBCLOSED stmt ELSE stmt .)


state 206

    (96) for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list . RBCLOSED stmt
    (97) expr_list -> expr_list . COMMA assign_stmt

    RBCLOSED        shift and go to state 212
    COMMA           shift and go to state 178


state 207

    (101) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .

    BREAK           reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    SEMICOLON       reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    ID              reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    IF              reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    WHILE           reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    CBOPEN          reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    RETURN          reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    FOR             reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    SWITCH          reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    INCR            reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    DECR            reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    RBOPEN          reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    MINUS           reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    PLUS            reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    CONST           reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    CBCLOSED        reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    DEFAULT         reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    CASE            reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)
    ELSE            reduce using rule 101 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED .)


state 208

    (102) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt . CBCLOSED

    CBCLOSED        shift and go to state 213


state 209

    (103) case_list -> case_list case_stmt .

    CBCLOSED        reduce using rule 103 (case_list -> case_list case_stmt .)
    DEFAULT         reduce using rule 103 (case_list -> case_list case_stmt .)
    CASE            reduce using rule 103 (case_list -> case_list case_stmt .)


state 210

    (106) default_stmt -> DEFAULT . COLON stmt_list

    COLON           shift and go to state 214


state 211

    (105) case_stmt -> CASE CONST . COLON stmt_list

    COLON           shift and go to state 215


state 212

    (96) for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED . stmt
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt                           shift and go to state 216
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 213

    (102) switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .

    BREAK           reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    SEMICOLON       reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    ID              reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    IF              reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    WHILE           reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    CBOPEN          reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    RETURN          reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    FOR             reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    SWITCH          reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    INCR            reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    DECR            reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    RBOPEN          reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    MINUS           reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    PLUS            reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    CONST           reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    CBCLOSED        reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    DEFAULT         reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    CASE            reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)
    ELSE            reduce using rule 102 (switch_stmt -> SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED .)


state 214

    (106) default_stmt -> DEFAULT COLON . stmt_list
    (47) stmt_list -> . stmts
    (48) stmt_list -> . empty
    (49) stmts -> . stmts stmt
    (50) stmts -> . stmt
    (107) empty -> .
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    CBCLOSED        reduce using rule 107 (empty -> .)
    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt_list                      shift and go to state 217
    stmts                          shift and go to state 59
    empty                          shift and go to state 60
    stmt                           shift and go to state 62
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 215

    (105) case_stmt -> CASE CONST COLON . stmt_list
    (47) stmt_list -> . stmts
    (48) stmt_list -> . empty
    (49) stmts -> . stmts stmt
    (50) stmts -> . stmt
    (107) empty -> .
    (52) stmt -> . assign_stmt SEMICOLON
    (53) stmt -> . if_stmt
    (54) stmt -> . while_stmt
    (55) stmt -> . block
    (56) stmt -> . BREAK SEMICOLON
    (57) stmt -> . return_stmt SEMICOLON
    (58) stmt -> . for_stmt
    (59) stmt -> . switch_stmt
    (60) stmt -> . SEMICOLON
    (61) assign_stmt -> . ID EQUALS expr
    (62) assign_stmt -> . ID ASSOP expr
    (63) assign_stmt -> . expr
    (88) if_stmt -> . IF RBOPEN cond RBCLOSED stmt
    (89) if_stmt -> . IF RBOPEN cond RBCLOSED stmt ELSE stmt
    (95) while_stmt -> . WHILE RBOPEN cond RBCLOSED stmt
    (51) block -> . CBOPEN stmt_list CBCLOSED
    (99) return_stmt -> . RETURN expr
    (100) return_stmt -> . RETURN
    (96) for_stmt -> . FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt
    (101) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list CBCLOSED
    (102) switch_stmt -> . SWITCH RBOPEN ID RBCLOSED CBOPEN case_list default_stmt CBCLOSED
    (75) expr -> . expr PLUS expr
    (76) expr -> . expr MINUS expr
    (77) expr -> . expr DIVIDE expr
    (78) expr -> . expr TIMES expr
    (79) expr -> . expr MOD expr
    (80) expr -> . expr INCR
    (81) expr -> . INCR expr
    (82) expr -> . expr DECR
    (83) expr -> . DECR expr
    (84) expr -> . RBOPEN expr RBCLOSED
    (85) expr -> . MINUS expr
    (86) expr -> . PLUS expr
    (87) expr -> . term
    (64) term -> . ID
    (65) term -> . CONST
    (66) term -> . ID RBOPEN arg_list RBCLOSED
    (67) term -> . ID SBOPEN CONST SBCLOSED
    (68) term -> . ID SBOPEN ID SBCLOSED

    CBCLOSED        reduce using rule 107 (empty -> .)
    DEFAULT         reduce using rule 107 (empty -> .)
    CASE            reduce using rule 107 (empty -> .)
    BREAK           shift and go to state 67
    SEMICOLON       shift and go to state 61
    ID              shift and go to state 71
    IF              shift and go to state 73
    WHILE           shift and go to state 75
    CBOPEN          shift and go to state 76
    RETURN          shift and go to state 77
    FOR             shift and go to state 78
    SWITCH          shift and go to state 79
    INCR            shift and go to state 82
    DECR            shift and go to state 83
    RBOPEN          shift and go to state 74
    MINUS           shift and go to state 81
    PLUS            shift and go to state 80
    CONST           shift and go to state 85

    stmt_list                      shift and go to state 218
    stmts                          shift and go to state 59
    empty                          shift and go to state 60
    stmt                           shift and go to state 62
    assign_stmt                    shift and go to state 63
    if_stmt                        shift and go to state 64
    while_stmt                     shift and go to state 65
    block                          shift and go to state 66
    return_stmt                    shift and go to state 68
    for_stmt                       shift and go to state 69
    switch_stmt                    shift and go to state 70
    expr                           shift and go to state 72
    term                           shift and go to state 84

state 216

    (96) for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .

    BREAK           reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    SEMICOLON       reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    ID              reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    IF              reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    WHILE           reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    CBOPEN          reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    RETURN          reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    FOR             reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    SWITCH          reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    INCR            reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    DECR            reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    RBOPEN          reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    MINUS           reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    PLUS            reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    CONST           reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    CBCLOSED        reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    DEFAULT         reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    CASE            reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)
    ELSE            reduce using rule 96 (for_stmt -> FOR RBOPEN expr_list SEMICOLON cond SEMICOLON expr_list RBCLOSED stmt .)


state 217

    (106) default_stmt -> DEFAULT COLON stmt_list .

    CBCLOSED        reduce using rule 106 (default_stmt -> DEFAULT COLON stmt_list .)


state 218

    (105) case_stmt -> CASE CONST COLON stmt_list .

    CBCLOSED        reduce using rule 105 (case_stmt -> CASE CONST COLON stmt_list .)
    DEFAULT         reduce using rule 105 (case_stmt -> CASE CONST COLON stmt_list .)
    CASE            reduce using rule 105 (case_stmt -> CASE CONST COLON stmt_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBCLOSED in state 172 resolved as shift
