
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW CM COL CPP_COMMENT EQ M MINMAX MS PART PIPE QSTRING RC RO S SC SEP SO TOKEN1 TOKEN2 TOKEN3 UINT date nl odd_number ws\n        prog : header SEP cars SEP race\n        \n        header : token1_l TOKEN2 S token1_l TOKEN3 S token1_l\n                    | token1_l TOKEN3 S token1_l TOKEN2 S token1_l\n        \n        token1_l : token1_l TOKEN1 S \n                | \n        \n        cars : car car \n                | cars car car\n        \n        car : QSTRING SO speeds SC\n        \n        speeds : QSTRING EQ UINT MS\n                    | speeds CM QSTRING EQ UINT MS\n        \n        race : print_min_max_l performances\n        \n        print_min_max_l : \n                            | print_min_max_l min_max\n        \n        min_max : MINMAX RO QSTRING RC RO section_names RC S\n        \n        section_names : QSTRING\n                            | section_names CM QSTRING\n        \n        performances : QSTRING ARROW parts S\n                        | performances QSTRING ARROW parts S\n        \n        parts : NT0 part\n                | parts PIPE NT1 part\n        \n        NT0 : \n        \n        NT1 : \n        \n        part : PART UINT COL drive_stats\n        \n        drive_stats : QSTRING UINT M\n                        | drive_stats CM QSTRING UINT M\n        '
    
_lr_action_items = {'TOKEN2':([0,3,12,13,19,],[-5,5,-5,-4,26,]),'TOKEN3':([0,3,11,13,18,],[-5,6,-5,-4,25,]),'TOKEN1':([0,3,11,12,13,18,19,34,35,41,42,],[-5,7,-5,-5,-4,7,7,-5,-5,7,7,]),'$end':([1,20,27,50,56,],[0,-1,-11,-17,-18,]),'SEP':([2,8,13,16,22,32,34,35,41,42,],[4,14,-4,-6,-7,-8,-5,-5,-2,-3,]),'QSTRING':([4,8,9,14,15,16,17,21,22,27,28,32,33,38,50,56,59,62,68,69,71,],[10,10,10,-12,10,-6,23,29,-7,36,-13,-8,40,46,-17,-18,63,66,72,73,-14,]),'S':([5,6,7,25,26,44,49,52,61,65,67,74,76,],[11,12,13,34,35,50,56,-19,-20,-23,71,-24,-25,]),'SO':([10,],[17,]),'MINMAX':([14,21,28,71,],[-12,30,-13,-14,]),'EQ':([23,40,],[31,48,]),'SC':([24,47,60,],[32,-9,-10,]),'CM':([24,47,60,63,64,65,72,74,76,],[33,-9,-10,-15,68,69,-16,-24,-25,]),'ARROW':([29,36,],[37,43,]),'RO':([30,54,],[38,59,]),'UINT':([31,48,53,66,73,],[39,55,58,70,75,]),'PART':([37,43,45,51,57,],[-21,-21,53,-22,53,]),'MS':([39,55,],[47,60,]),'PIPE':([44,49,52,61,65,74,76,],[51,51,-19,-20,-23,-24,-25,]),'RC':([46,63,64,72,],[54,-15,67,-16,]),'COL':([58,],[62,]),'M':([70,75,],[74,76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'header':([0,],[2,]),'token1_l':([0,11,12,34,35,],[3,18,19,41,42,]),'cars':([4,],[8,]),'car':([4,8,9,15,],[9,15,16,22,]),'race':([14,],[20,]),'print_min_max_l':([14,],[21,]),'speeds':([17,],[24,]),'performances':([21,],[27,]),'min_max':([21,],[28,]),'parts':([37,43,],[44,49,]),'NT0':([37,43,],[45,45,]),'part':([45,57,],[52,61,]),'NT1':([51,],[57,]),'section_names':([59,],[64,]),'drive_stats':([62,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> header SEP cars SEP race','prog',5,'p_prog','myParser.py',27),
  ('header -> token1_l TOKEN2 S token1_l TOKEN3 S token1_l','header',7,'p_header','myParser.py',34),
  ('header -> token1_l TOKEN3 S token1_l TOKEN2 S token1_l','header',7,'p_header','myParser.py',35),
  ('token1_l -> token1_l TOKEN1 S','token1_l',3,'p_token1_l','myParser.py',40),
  ('token1_l -> <empty>','token1_l',0,'p_token1_l','myParser.py',41),
  ('cars -> car car','cars',2,'p_cars','myParser.py',47),
  ('cars -> cars car car','cars',3,'p_cars','myParser.py',48),
  ('car -> QSTRING SO speeds SC','car',4,'p_car','myParser.py',53),
  ('speeds -> QSTRING EQ UINT MS','speeds',4,'p_speeds','myParser.py',64),
  ('speeds -> speeds CM QSTRING EQ UINT MS','speeds',6,'p_speeds','myParser.py',65),
  ('race -> print_min_max_l performances','race',2,'p_race','myParser.py',88),
  ('print_min_max_l -> <empty>','print_min_max_l',0,'p_print_min_max_l','myParser.py',98),
  ('print_min_max_l -> print_min_max_l min_max','print_min_max_l',2,'p_print_min_max_l','myParser.py',99),
  ('min_max -> MINMAX RO QSTRING RC RO section_names RC S','min_max',8,'p_min_max','myParser.py',104),
  ('section_names -> QSTRING','section_names',1,'p_section_names','myParser.py',113),
  ('section_names -> section_names CM QSTRING','section_names',3,'p_section_names','myParser.py',114),
  ('performances -> QSTRING ARROW parts S','performances',4,'p_performances','myParser.py',165),
  ('performances -> performances QSTRING ARROW parts S','performances',5,'p_performances','myParser.py',166),
  ('parts -> NT0 part','parts',2,'p_parts','myParser.py',203),
  ('parts -> parts PIPE NT1 part','parts',4,'p_parts','myParser.py',204),
  ('NT0 -> <empty>','NT0',0,'p_NT0','myParser.py',221),
  ('NT1 -> <empty>','NT1',0,'p_NT1','myParser.py',228),
  ('part -> PART UINT COL drive_stats','part',4,'p_part','myParser.py',235),
  ('drive_stats -> QSTRING UINT M','drive_stats',3,'p_drive_stats','myParser.py',247),
  ('drive_stats -> drive_stats CM QSTRING UINT M','drive_stats',5,'p_drive_stats','myParser.py',248),
]
