Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> prog_ok
Rule 2     prog_ok -> START C mp3_list SERVER C data_time user_list
Rule 3     mp3_list -> mp3
Rule 4     mp3_list -> mp3_list mp3
Rule 5     mp3 -> NUMBER KBS C song_list S
Rule 6     song_list -> SONG NUMBER
Rule 7     song_list -> song_list CM SONG NUMBER
Rule 8     data_time -> TIME C HOUR DATA C DATE
Rule 9     data_time -> DATA C DATE TIME C HOUR
Rule 10    user_list -> <empty>
Rule 11    user_list -> user_list user
Rule 12    user -> ip C songs_list S
Rule 13    ip -> IP
Rule 14    songs_list -> SONG
Rule 15    songs_list -> songs_list CM SONG

Terminals, with rules where they appear

C                    : 2 2 5 8 8 9 9 12
CM                   : 7 15
DATA                 : 8 9
DATE                 : 8 9
HOUR                 : 8 9
IP                   : 13
KBS                  : 5
NUMBER               : 5 6 7
S                    : 5 12
SERVER               : 2
SONG                 : 6 7 14 15
START                : 2
TIME                 : 8 9
error                : 

Nonterminals, with rules where they appear

data_time            : 2
ip                   : 12
mp3                  : 3 4
mp3_list             : 2 4
prog                 : 0
prog_ok              : 1
song_list            : 5 7
songs_list           : 12 15
user                 : 11
user_list            : 2 11

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . prog_ok
    (2) prog_ok -> . START C mp3_list SERVER C data_time user_list

    START           shift and go to state 3

    prog                           shift and go to state 1
    prog_ok                        shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> prog_ok .

    $end            reduce using rule 1 (prog -> prog_ok .)


state 3

    (2) prog_ok -> START . C mp3_list SERVER C data_time user_list

    C               shift and go to state 4


state 4

    (2) prog_ok -> START C . mp3_list SERVER C data_time user_list
    (3) mp3_list -> . mp3
    (4) mp3_list -> . mp3_list mp3
    (5) mp3 -> . NUMBER KBS C song_list S

    NUMBER          shift and go to state 7

    mp3_list                       shift and go to state 5
    mp3                            shift and go to state 6

state 5

    (2) prog_ok -> START C mp3_list . SERVER C data_time user_list
    (4) mp3_list -> mp3_list . mp3
    (5) mp3 -> . NUMBER KBS C song_list S

    SERVER          shift and go to state 8
    NUMBER          shift and go to state 7

    mp3                            shift and go to state 9

state 6

    (3) mp3_list -> mp3 .

    SERVER          reduce using rule 3 (mp3_list -> mp3 .)
    NUMBER          reduce using rule 3 (mp3_list -> mp3 .)


state 7

    (5) mp3 -> NUMBER . KBS C song_list S

    KBS             shift and go to state 10


state 8

    (2) prog_ok -> START C mp3_list SERVER . C data_time user_list

    C               shift and go to state 11


state 9

    (4) mp3_list -> mp3_list mp3 .

    SERVER          reduce using rule 4 (mp3_list -> mp3_list mp3 .)
    NUMBER          reduce using rule 4 (mp3_list -> mp3_list mp3 .)


state 10

    (5) mp3 -> NUMBER KBS . C song_list S

    C               shift and go to state 12


state 11

    (2) prog_ok -> START C mp3_list SERVER C . data_time user_list
    (8) data_time -> . TIME C HOUR DATA C DATE
    (9) data_time -> . DATA C DATE TIME C HOUR

    TIME            shift and go to state 14
    DATA            shift and go to state 15

    data_time                      shift and go to state 13

state 12

    (5) mp3 -> NUMBER KBS C . song_list S
    (6) song_list -> . SONG NUMBER
    (7) song_list -> . song_list CM SONG NUMBER

    SONG            shift and go to state 17

    song_list                      shift and go to state 16

state 13

    (2) prog_ok -> START C mp3_list SERVER C data_time . user_list
    (10) user_list -> .
    (11) user_list -> . user_list user

    IP              reduce using rule 10 (user_list -> .)
    $end            reduce using rule 10 (user_list -> .)

    user_list                      shift and go to state 18

state 14

    (8) data_time -> TIME . C HOUR DATA C DATE

    C               shift and go to state 19


state 15

    (9) data_time -> DATA . C DATE TIME C HOUR

    C               shift and go to state 20


state 16

    (5) mp3 -> NUMBER KBS C song_list . S
    (7) song_list -> song_list . CM SONG NUMBER

    S               shift and go to state 21
    CM              shift and go to state 22


state 17

    (6) song_list -> SONG . NUMBER

    NUMBER          shift and go to state 23


state 18

    (2) prog_ok -> START C mp3_list SERVER C data_time user_list .
    (11) user_list -> user_list . user
    (12) user -> . ip C songs_list S
    (13) ip -> . IP

    $end            reduce using rule 2 (prog_ok -> START C mp3_list SERVER C data_time user_list .)
    IP              shift and go to state 26

    user                           shift and go to state 24
    ip                             shift and go to state 25

state 19

    (8) data_time -> TIME C . HOUR DATA C DATE

    HOUR            shift and go to state 27


state 20

    (9) data_time -> DATA C . DATE TIME C HOUR

    DATE            shift and go to state 28


state 21

    (5) mp3 -> NUMBER KBS C song_list S .

    SERVER          reduce using rule 5 (mp3 -> NUMBER KBS C song_list S .)
    NUMBER          reduce using rule 5 (mp3 -> NUMBER KBS C song_list S .)


state 22

    (7) song_list -> song_list CM . SONG NUMBER

    SONG            shift and go to state 29


state 23

    (6) song_list -> SONG NUMBER .

    S               reduce using rule 6 (song_list -> SONG NUMBER .)
    CM              reduce using rule 6 (song_list -> SONG NUMBER .)


state 24

    (11) user_list -> user_list user .

    IP              reduce using rule 11 (user_list -> user_list user .)
    $end            reduce using rule 11 (user_list -> user_list user .)


state 25

    (12) user -> ip . C songs_list S

    C               shift and go to state 30


state 26

    (13) ip -> IP .

    C               reduce using rule 13 (ip -> IP .)


state 27

    (8) data_time -> TIME C HOUR . DATA C DATE

    DATA            shift and go to state 31


state 28

    (9) data_time -> DATA C DATE . TIME C HOUR

    TIME            shift and go to state 32


state 29

    (7) song_list -> song_list CM SONG . NUMBER

    NUMBER          shift and go to state 33


state 30

    (12) user -> ip C . songs_list S
    (14) songs_list -> . SONG
    (15) songs_list -> . songs_list CM SONG

    SONG            shift and go to state 35

    songs_list                     shift and go to state 34

state 31

    (8) data_time -> TIME C HOUR DATA . C DATE

    C               shift and go to state 36


state 32

    (9) data_time -> DATA C DATE TIME . C HOUR

    C               shift and go to state 37


state 33

    (7) song_list -> song_list CM SONG NUMBER .

    S               reduce using rule 7 (song_list -> song_list CM SONG NUMBER .)
    CM              reduce using rule 7 (song_list -> song_list CM SONG NUMBER .)


state 34

    (12) user -> ip C songs_list . S
    (15) songs_list -> songs_list . CM SONG

    S               shift and go to state 38
    CM              shift and go to state 39


state 35

    (14) songs_list -> SONG .

    S               reduce using rule 14 (songs_list -> SONG .)
    CM              reduce using rule 14 (songs_list -> SONG .)


state 36

    (8) data_time -> TIME C HOUR DATA C . DATE

    DATE            shift and go to state 40


state 37

    (9) data_time -> DATA C DATE TIME C . HOUR

    HOUR            shift and go to state 41


state 38

    (12) user -> ip C songs_list S .

    IP              reduce using rule 12 (user -> ip C songs_list S .)
    $end            reduce using rule 12 (user -> ip C songs_list S .)


state 39

    (15) songs_list -> songs_list CM . SONG

    SONG            shift and go to state 42


state 40

    (8) data_time -> TIME C HOUR DATA C DATE .

    IP              reduce using rule 8 (data_time -> TIME C HOUR DATA C DATE .)
    $end            reduce using rule 8 (data_time -> TIME C HOUR DATA C DATE .)


state 41

    (9) data_time -> DATA C DATE TIME C HOUR .

    IP              reduce using rule 9 (data_time -> DATA C DATE TIME C HOUR .)
    $end            reduce using rule 9 (data_time -> DATA C DATE TIME C HOUR .)


state 42

    (15) songs_list -> songs_list CM SONG .

    S               reduce using rule 15 (songs_list -> songs_list CM SONG .)
    CM              reduce using rule 15 (songs_list -> songs_list CM SONG .)

