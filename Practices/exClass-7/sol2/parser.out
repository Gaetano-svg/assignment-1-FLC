Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> prog_ok
Rule 2     prog_ok -> START C mp3_list SERVER C data_time user_list
Rule 3     mp3_list -> mp3
Rule 4     mp3_list -> mp3_list mp3
Rule 5     mp3 -> NUMBER KBS NT1 C NT0 song_list S
Rule 6     NT1 -> <empty>
Rule 7     NT0 -> <empty>
Rule 8     song_list -> song_list CM song
Rule 9     song_list -> song
Rule 10    song -> SONG NUMBER
Rule 11    data_time -> TIME C HOUR DATA C DATE
Rule 12    data_time -> DATA C DATE TIME C HOUR
Rule 13    user_list -> <empty>
Rule 14    user_list -> user_list user
Rule 15    user -> ip C songs_list S
Rule 16    ip -> IP
Rule 17    songs_list -> SONG
Rule 18    songs_list -> songs_list CM SONG

Terminals, with rules where they appear

C                    : 2 2 5 11 11 12 12 15
CM                   : 8 18
DATA                 : 11 12
DATE                 : 11 12
HOUR                 : 11 12
IP                   : 16
KBS                  : 5
NUMBER               : 5 10
S                    : 5 15
SERVER               : 2
SONG                 : 10 17 18
START                : 2
TIME                 : 11 12
error                : 

Nonterminals, with rules where they appear

NT0                  : 5
NT1                  : 5
data_time            : 2
ip                   : 15
mp3                  : 3 4
mp3_list             : 2 4
prog                 : 0
prog_ok              : 1
song                 : 8 9
song_list            : 5 8
songs_list           : 15 18
user                 : 14
user_list            : 2 14

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . prog_ok
    (2) prog_ok -> . START C mp3_list SERVER C data_time user_list

    START           shift and go to state 3

    prog                           shift and go to state 1
    prog_ok                        shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> prog_ok .

    $end            reduce using rule 1 (prog -> prog_ok .)


state 3

    (2) prog_ok -> START . C mp3_list SERVER C data_time user_list

    C               shift and go to state 4


state 4

    (2) prog_ok -> START C . mp3_list SERVER C data_time user_list
    (3) mp3_list -> . mp3
    (4) mp3_list -> . mp3_list mp3
    (5) mp3 -> . NUMBER KBS NT1 C NT0 song_list S

    NUMBER          shift and go to state 7

    mp3_list                       shift and go to state 5
    mp3                            shift and go to state 6

state 5

    (2) prog_ok -> START C mp3_list . SERVER C data_time user_list
    (4) mp3_list -> mp3_list . mp3
    (5) mp3 -> . NUMBER KBS NT1 C NT0 song_list S

    SERVER          shift and go to state 8
    NUMBER          shift and go to state 7

    mp3                            shift and go to state 9

state 6

    (3) mp3_list -> mp3 .

    SERVER          reduce using rule 3 (mp3_list -> mp3 .)
    NUMBER          reduce using rule 3 (mp3_list -> mp3 .)


state 7

    (5) mp3 -> NUMBER . KBS NT1 C NT0 song_list S

    KBS             shift and go to state 10


state 8

    (2) prog_ok -> START C mp3_list SERVER . C data_time user_list

    C               shift and go to state 11


state 9

    (4) mp3_list -> mp3_list mp3 .

    SERVER          reduce using rule 4 (mp3_list -> mp3_list mp3 .)
    NUMBER          reduce using rule 4 (mp3_list -> mp3_list mp3 .)


state 10

    (5) mp3 -> NUMBER KBS . NT1 C NT0 song_list S
    (6) NT1 -> .

    C               reduce using rule 6 (NT1 -> .)

    NT1                            shift and go to state 12

state 11

    (2) prog_ok -> START C mp3_list SERVER C . data_time user_list
    (11) data_time -> . TIME C HOUR DATA C DATE
    (12) data_time -> . DATA C DATE TIME C HOUR

    TIME            shift and go to state 14
    DATA            shift and go to state 15

    data_time                      shift and go to state 13

state 12

    (5) mp3 -> NUMBER KBS NT1 . C NT0 song_list S

    C               shift and go to state 16


state 13

    (2) prog_ok -> START C mp3_list SERVER C data_time . user_list
    (13) user_list -> .
    (14) user_list -> . user_list user

    IP              reduce using rule 13 (user_list -> .)
    $end            reduce using rule 13 (user_list -> .)

    user_list                      shift and go to state 17

state 14

    (11) data_time -> TIME . C HOUR DATA C DATE

    C               shift and go to state 18


state 15

    (12) data_time -> DATA . C DATE TIME C HOUR

    C               shift and go to state 19


state 16

    (5) mp3 -> NUMBER KBS NT1 C . NT0 song_list S
    (7) NT0 -> .

    SONG            reduce using rule 7 (NT0 -> .)

    NT0                            shift and go to state 20

state 17

    (2) prog_ok -> START C mp3_list SERVER C data_time user_list .
    (14) user_list -> user_list . user
    (15) user -> . ip C songs_list S
    (16) ip -> . IP

    $end            reduce using rule 2 (prog_ok -> START C mp3_list SERVER C data_time user_list .)
    IP              shift and go to state 23

    user                           shift and go to state 21
    ip                             shift and go to state 22

state 18

    (11) data_time -> TIME C . HOUR DATA C DATE

    HOUR            shift and go to state 24


state 19

    (12) data_time -> DATA C . DATE TIME C HOUR

    DATE            shift and go to state 25


state 20

    (5) mp3 -> NUMBER KBS NT1 C NT0 . song_list S
    (8) song_list -> . song_list CM song
    (9) song_list -> . song
    (10) song -> . SONG NUMBER

    SONG            shift and go to state 28

    song_list                      shift and go to state 26
    song                           shift and go to state 27

state 21

    (14) user_list -> user_list user .

    IP              reduce using rule 14 (user_list -> user_list user .)
    $end            reduce using rule 14 (user_list -> user_list user .)


state 22

    (15) user -> ip . C songs_list S

    C               shift and go to state 29


state 23

    (16) ip -> IP .

    C               reduce using rule 16 (ip -> IP .)


state 24

    (11) data_time -> TIME C HOUR . DATA C DATE

    DATA            shift and go to state 30


state 25

    (12) data_time -> DATA C DATE . TIME C HOUR

    TIME            shift and go to state 31


state 26

    (5) mp3 -> NUMBER KBS NT1 C NT0 song_list . S
    (8) song_list -> song_list . CM song

    S               shift and go to state 32
    CM              shift and go to state 33


state 27

    (9) song_list -> song .

    S               reduce using rule 9 (song_list -> song .)
    CM              reduce using rule 9 (song_list -> song .)


state 28

    (10) song -> SONG . NUMBER

    NUMBER          shift and go to state 34


state 29

    (15) user -> ip C . songs_list S
    (17) songs_list -> . SONG
    (18) songs_list -> . songs_list CM SONG

    SONG            shift and go to state 36

    songs_list                     shift and go to state 35

state 30

    (11) data_time -> TIME C HOUR DATA . C DATE

    C               shift and go to state 37


state 31

    (12) data_time -> DATA C DATE TIME . C HOUR

    C               shift and go to state 38


state 32

    (5) mp3 -> NUMBER KBS NT1 C NT0 song_list S .

    SERVER          reduce using rule 5 (mp3 -> NUMBER KBS NT1 C NT0 song_list S .)
    NUMBER          reduce using rule 5 (mp3 -> NUMBER KBS NT1 C NT0 song_list S .)


state 33

    (8) song_list -> song_list CM . song
    (10) song -> . SONG NUMBER

    SONG            shift and go to state 28

    song                           shift and go to state 39

state 34

    (10) song -> SONG NUMBER .

    S               reduce using rule 10 (song -> SONG NUMBER .)
    CM              reduce using rule 10 (song -> SONG NUMBER .)


state 35

    (15) user -> ip C songs_list . S
    (18) songs_list -> songs_list . CM SONG

    S               shift and go to state 40
    CM              shift and go to state 41


state 36

    (17) songs_list -> SONG .

    S               reduce using rule 17 (songs_list -> SONG .)
    CM              reduce using rule 17 (songs_list -> SONG .)


state 37

    (11) data_time -> TIME C HOUR DATA C . DATE

    DATE            shift and go to state 42


state 38

    (12) data_time -> DATA C DATE TIME C . HOUR

    HOUR            shift and go to state 43


state 39

    (8) song_list -> song_list CM song .

    S               reduce using rule 8 (song_list -> song_list CM song .)
    CM              reduce using rule 8 (song_list -> song_list CM song .)


state 40

    (15) user -> ip C songs_list S .

    IP              reduce using rule 15 (user -> ip C songs_list S .)
    $end            reduce using rule 15 (user -> ip C songs_list S .)


state 41

    (18) songs_list -> songs_list CM . SONG

    SONG            shift and go to state 44


state 42

    (11) data_time -> TIME C HOUR DATA C DATE .

    IP              reduce using rule 11 (data_time -> TIME C HOUR DATA C DATE .)
    $end            reduce using rule 11 (data_time -> TIME C HOUR DATA C DATE .)


state 43

    (12) data_time -> DATA C DATE TIME C HOUR .

    IP              reduce using rule 12 (data_time -> DATA C DATE TIME C HOUR .)
    $end            reduce using rule 12 (data_time -> DATA C DATE TIME C HOUR .)


state 44

    (18) songs_list -> songs_list CM SONG .

    S               reduce using rule 18 (songs_list -> songs_list CM SONG .)
    CM              reduce using rule 18 (songs_list -> songs_list CM SONG .)

